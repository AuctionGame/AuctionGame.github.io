{"version":3,"sources":["components/card.js","components/LoginHandler.js","components/priority.js","components/predict.js","components/SimplePlayerCard.js","components/Stats.js","components/pages/home.js","components/pages/players.js","components/teamCard.js","components/unselectedTeams.js","components/pages/teams.js","components/quiz.js","components/messages.js","components/QuizWaiting.js","components/priorityResults.js","components/pages/QuizResult.js","components/pages/prestart.js","App.js","serviceWorker.js","index.js"],"names":["MyCard","img","this","props","name","color","text","status","className","style","height","src","alt","display","flexDirection","marginTop","type","margin","onClick","handler","React","Component","LoginHandler","state","inputValue","handleFormSubmit","bind","handleInputChange","event","preventDefault","submitHandler","trim","value","target","test","alert","setState","onSubmit","onChange","placeholder","required","allowedCount","Priority","handleDialogClose","open","addPriority","i","priorityList","curCategory","bidprice","curCount","includes","indexx","indexOf","splice","j","length","push","submitPriorities","db","firebase","firestore","intArr","parseInt","collection","doc","loginId","set","priorityArray","bidPriceDict","firebaseListener","pno","onSnapshot","snap","tempArr","data","strArray","error","console","log","currentPriority","priorityListElements","map","key","players","priorityComponent","elementArr","submitButton","marginLeft","marginBlock","disabled","overflowY","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Predict","handleDialogOpen","dialogName","handlePlayerConfirm","predictionArray","predictionArrayDict","confirmNumber","loginFail","loginFailHeading","loginFailDesc","toShowPriority","isLoading","handleFailDialogClose","loginSubmitHandler","val","get","then","exists","predictionData","err","doc2","catch","number","loginMessageDialog","DialogActions","Button","autoFocus","items","addPrediction","padding","toShowLoginHandler","width","useStyles","makeStyles","title","fontSize","pos","marginBottom","SimplePlayerCard","classes","imgSrc","highQuality","colToUse","colSize","fullHeight","fixedHeight","priceSection","bought","price","sold","bidPrice","toShowBidPrice","Card","CardContent","Typography","gutterBottom","variant","component","adjective","Stats","pdata","playerdata","playerNo","heading","Object","entries","year","fontWeight","field","value1","Body","tempList","ob","MiddleBlock","currentMain","current","teams","cardsElementList","moneyLeft","predictedByList","forEach","index","isPredictionLoading","ipoList","prioritiesDict","toFixed","isPrioritiesLoading","round","LeftTabs","teamName","background","ListItem","button","borderRadius","ListItemText","primary","Home","1","2","3","4","5","6","7","8","teamCodes","teamNames","predictionDict","empty_dict","teamNamesDict","teamCodesDict","predictedTeams","moneyLeftDict","tempDict","unselectedTeamNames","parray","tempArray","leftBar","updateCurrrentMain","List","position","top","Player","toOpen","soldDict","currentClick","unsubscribe","array","textAlign","playerNames","TeamCard","teamMember","teamMemberComponent","predictionComponent","shares","boughtSharesComponent","player","playerName","priority","prediction_arr","class","teamLeader","UnselectedTeams","teamDetails","unSelectedTeams","priorityDict","sharesDict","teamMembers","teamLeaders","allTeamsComponent","teamCode","Teams","showSelected","toShowSelected","showUnselected","unTeamDetails","Dict","unsubscribeForUnselected","teamOwners","percentShare","Math","floor","Quiz","userID","currentQuestionNumber","currentQuestion","answer","questions","answerDict","9","10","11","12","updateQuestion","handleAnswerInput","handleSubmit","Qno","merge","newQno","answersRef","docSnapshot","whiteSpace","borderStyle","TextareaAutosize","rowsMin","colorType","questionTab","themesArray","Messages","getCookie","cname","ca","decodeURIComponent","document","cookie","split","c","charAt","substring","setCookie","cvalue","updateMessages","messagesArray","success","currentMessageArray","enqueueSnackbar","themeToggler","cTheme","getElementById","classList","remove","add","messageEl","elements","overflow","marginRight","withSnackbar","QuizWaiting","answers","correctAnswers","answersComponent","PriorityResults","scorecard","keys","sort","first","second","tableToCreate","diff","parseFloat","border","QuizResult","showQuiz","showIPO","total","row","Prestart","message","checkCode","tCode","enter","introBtn","href","App","tabValue","messages","handleChange","lastSold","newValue","updateRound","pid","r","AppBar","Tabs","aria-label","Tab","label","to","Link","path","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","maxSnack","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.739ab349.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass MyCard extends React.Component {\r\n  render() {\r\n    const img = 'cpng/' + this.props.img + '.jpg';\r\n    const name = this.props.name;\r\n\r\n    const status = this.props.status;\r\n    var color = 'btn-primary';\r\n    var text = 'Select';\r\n    if (status) {\r\n      color = 'btn-outline-danger';\r\n      text = 'Unselect';\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-sm-4 col-md-3 col-lg-2\">\r\n        <div className=\"card gallery-item\" style={{ height: \"92%\" }}>\r\n          <img className=\"card-img-top\" src={img} alt={name} />\r\n          <div className=\"card-body\" style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n            <h5 className=\"card-title\">{name}</h5>\r\n            <p style={{ marginTop: 'auto' }}>{this.props.type}</p>\r\n            <button style={{ margin: \"auto auto 8px auto\" }} onClick={this.props.handler} className={`btn ${color}`}>\r\n              {' '}\r\n              {text}{' '}\r\n            </button>\r\n\r\n            {/* add on click to this button  */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyCard;\r\n","import React from 'react';\r\n\r\nclass LoginHandler extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: '',\r\n    };\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  handleFormSubmit(event) {\r\n    event.preventDefault();\r\n    // console.log('From submit called');\r\n    // console.log('Value', this.state.inputValue);\r\n\r\n    if (typeof this.props.submitHandler === 'function') {\r\n      this.props.submitHandler(this.state.inputValue.trim());\r\n    }\r\n  }\r\n\r\n\r\n  handleInputChange(event) {\r\n    // console.log(event.target.value);\r\n\r\n    let value = event.target.value;\r\n\r\n    var format = /[!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>/?]+/;\r\n    if(format.test(value)){\r\n      alert('No special characters are allowed!');\r\n    } else {\r\n      this.setState({\r\n        inputValue: value,\r\n      });\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"jumbotron\">\r\n          <form onSubmit={this.handleFormSubmit} className=\"from\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                value={this.state.inputValue}\r\n                onChange={this.handleInputChange}\r\n                className=\"form-control\"\r\n                placeholder=\"Enter your secret ID\"\r\n                required\r\n              />\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              <button className=\"btn btn-info btn-lg\" style={{ margin: \"auto\" }} type=\"submit\">Submit</button>\r\n            </div>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginHandler;\r\n","import React, { Fragment } from 'react';\r\n\r\nimport bidprice from '../data/bidprice.json';\r\nimport MyCard from './card';\r\nimport players from '../data/players.json';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst allowedCount = { '1,00,000': 2, '3,00,000': 3, '5,00,000': 2 };\r\n\r\nclass Priority extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Order is mandatory in priority List\r\n    this.state = {\r\n      priorityList: [],\r\n      bidPriceDict: {\r\n        '5,00,000': [],\r\n        '3,00,000': [],\r\n        '1,00,000': [],\r\n      },\r\n      open: false,\r\n    };\r\n\r\n    this.firebaseListener = '';\r\n\r\n  }\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  addPriority = (i) => {\r\n    //console.log(\"Add this to priorty\", i);\r\n\r\n    const priorityList = this.state.priorityList;\r\n    const curCategory = bidprice[i];\r\n    let curCount = 1;\r\n\r\n    if (priorityList.includes(i)) {\r\n      //This is for removing player from priority list\r\n      const indexx = priorityList.indexOf(i);\r\n      priorityList.splice(indexx, 1);\r\n    } else {\r\n      // This is for adding player to priority list\r\n      for (var j = 0; j < priorityList.length; j++) {\r\n        if (bidprice[priorityList[j]] === curCategory) curCount += 1;\r\n      }\r\n      if (curCount > allowedCount[curCategory]) {\r\n        alert(\r\n          'You have already selected ' +\r\n            allowedCount[curCategory] +\r\n            ' players of this category',\r\n        );\r\n      } else {\r\n        priorityList.push(i);\r\n      }\r\n    }\r\n    //console.log(priorityList , curCategory , curCount)\r\n\r\n    this.setState({\r\n      priorityList: priorityList,\r\n    });\r\n  };\r\n\r\n  submitPriorities = () => {\r\n    // console.log('Submititing priorites to', this.props.loginId);\r\n    const db = firebase.firestore();\r\n\r\n    const priorityList = this.state.priorityList;\r\n\r\n    let intArr = [];\r\n    for (let i = 0; i < priorityList.length; i++) {\r\n      intArr.push(parseInt(priorityList[i]));\r\n    }\r\n\r\n    db.collection('priority').doc(this.props.loginId).set({\r\n      priorityArray: intArr,\r\n    });\r\n\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    // First create the dictionary\r\n    let bidPriceDict = {};\r\n    for (var pno in bidprice) {\r\n      if (bidPriceDict[bidprice[pno]]) {\r\n        bidPriceDict[bidprice[pno]].push(pno);\r\n      } else {\r\n        bidPriceDict[bidprice[pno]] = [pno];\r\n      }\r\n    }\r\n\r\n    // Added realtime updated\r\n    this.firebaseListener = firebase.firestore().collection('priority')\r\n      .doc(this.props.loginId)\r\n      .onSnapshot(\r\n        (snap) => {\r\n          const tempArr = snap.data()['priorityArray'];\r\n\r\n          // Converting it to string\r\n          var strArray = [];\r\n          for (let i = 0; i < tempArr.length; i++) {\r\n            strArray.push(tempArr[i] + '');\r\n          }\r\n\r\n          this.setState({\r\n            priorityList: strArray,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log('Fetch failed in priority fetch');\r\n        },\r\n      );\r\n\r\n    // Here we store the bidPricedict for further uses\r\n    this.setState({\r\n      bidPriceDict: bidPriceDict,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    try {\r\n      this.firebaseListener();\r\n    } catch(error) {\r\n      console.log(\"Ignore Error in priority\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const priorityList = this.state.priorityList;\r\n    const currentPriority = priorityList.length + 1;\r\n    const bidPriceDict = this.state.bidPriceDict;\r\n\r\n    const priorityListElements = priorityList.map((i) => (\r\n      <MyCard\r\n        key={i}\r\n        img={i}\r\n        name={players[i]}\r\n        type=\"Bowler\"\r\n        status={this.state.priorityList.includes(i)}\r\n        handler={() => this.addPriority(i)}\r\n      />\r\n    ));\r\n    // console.log('priority list elements ', priorityListElements.length);\r\n    const priorityComponent = [];\r\n\r\n    let i = 1;\r\n    for (var key in bidPriceDict) {\r\n      const playerArray = bidPriceDict[key];\r\n\r\n      const elementArr = playerArray.map((i) => (\r\n        <MyCard\r\n          key={i}\r\n          img={i}\r\n          name={players[i]}\r\n          type=\"Bowler\"\r\n          status={this.state.priorityList.includes(i)}\r\n          handler={() => this.addPriority(i)}\r\n        />\r\n      ));\r\n\r\n      priorityComponent.push(\r\n        <h3 key={i} >\r\n          Category {i} (Maximum {allowedCount[key]} players)\r\n        </h3>,\r\n        <div className=\"row\" key={'st'+i}>{elementArr}</div>,\r\n      );\r\n\r\n      i++;\r\n    }\r\n\r\n    let submitButton = (\r\n      <button className=\"btn btn-info\" style={{ marginLeft: 'auto', marginTop: \"6px\", marginBlock: \"6px\" }} disabled>\r\n        Submit\r\n      </button>\r\n    );\r\n    if (priorityList.length >= 7) {\r\n      submitButton = (\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={this.submitPriorities}\r\n          style={{ marginLeft: 'auto', marginTop: \"6px\", marginBlock: \"6px\" }}\r\n        >\r\n          Submit\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className = \"center\">\r\n        <h1>IPO Round List Selections</h1>\r\n        </div>\r\n        <div style={{ display: 'flex' }}>\r\n          <h2>Choose your Priority {currentPriority}</h2>\r\n          {submitButton}\r\n        </div>\r\n\r\n        <div\r\n          className=\"container-fluid\"\r\n          style={{ height: '80vh', overflowY: 'auto' }}\r\n        >\r\n          {priorityComponent}\r\n        </div>\r\n\r\n        <h3 style={{ marginTop: \"32px\" }}> Your priority list </h3>\r\n        <div className=\"row\">{priorityListElements}</div>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleDialogClose}\r\n          aria-labelledby=\"Login Failed\"\r\n          aria-describedby=\"Fail dialog\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Submitted</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              You choices have been updated, you can still make changes\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Priority;\r\n","import React from 'react';\r\nimport MyCard from './card';\r\nimport LoginHandler from './LoginHandler';\r\n\r\nimport Priority from './priority';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport players from '../data/players.json';\r\n\r\nclass Predict extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // TO change loginId and toShowPriority\r\n    this.state = {\r\n      predictionArray: [],\r\n      open: false,\r\n      dialogName: 'Confirm',\r\n      confirmNumber: 0,\r\n      loginId: '',\r\n      loginFail: false,\r\n      loginFailHeading: 'Login Unsuccessful',\r\n      loginFailDesc: 'Please check you secret Id and try again!',\r\n      toShowPriority: false,\r\n      isLoading: false\r\n    };\r\n\r\n    this.handleFailDialogClose = this.handleFailDialogClose.bind(this);\r\n    this.loginSubmitHandler = this.loginSubmitHandler.bind(this);\r\n    this.handleDialogOpen = this.handleDialogOpen.bind(this);\r\n\r\n    this.firebaseListener = '';\r\n  }\r\n\r\n  loginSubmitHandler(val) {\r\n    console.log('Login In prediction submit function', val);\r\n\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n\r\n    const db = firebase.firestore();\r\n    db.collection('predictions')\r\n      .doc(val)\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          // login successful\r\n          this.setState({\r\n            loginId: val,\r\n            isLoading: false\r\n          });\r\n\r\n          this.firebaseListener = firebase.firestore().collection('predictions')\r\n            .doc(this.state.loginId)\r\n            .onSnapshot(\r\n              (snap) => {\r\n                const predictionData = snap.data()['predictionArray'];\r\n                // console.log('Prediction data', predictionData);\r\n\r\n                this.setState({\r\n                  predictionArray: predictionData,\r\n                });\r\n              },\r\n              (err) => { },\r\n            );\r\n        } else {\r\n          // This means he is not in predictions, let's also check for\r\n\r\n          firebase.firestore().collection('priority')\r\n            .doc(val)\r\n            .get()\r\n            .then((doc2) => {\r\n              if (doc2.exists) {\r\n                this.setState({\r\n                  toShowPriority: true,\r\n                  loginId: val,\r\n                  isLoading: false\r\n                });\r\n              } else {\r\n                // No such players exists!\r\n                this.setState({\r\n                  loginFail: true,\r\n                  isLoading: false\r\n                });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              alert('Network Error');\r\n              this.setState({\r\n                isLoading: false\r\n              })\r\n            });\r\n        } // Enf of first predictions else\r\n      })\r\n      .catch((error) => {\r\n        alert('Network error');\r\n        console.log(\"Errror came\", error);\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  /* This function just closes the dialog */\r\n  handleDialogClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleFailDialogClose() {\r\n    this.setState({\r\n      loginFail: false,\r\n    });\r\n  }\r\n\r\n  /* This function handles the confirm prediciton dialog */\r\n  handleDialogOpen = () => {\r\n    console.log('Handle submit');\r\n    this.setState({\r\n      dialogName: \"You're about to submit\",\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  /* Finall add on yes button pressed */\r\n  handlePlayerConfirm = () => {\r\n    const predictionArray = this.state.predictionArray;\r\n\r\n    var predictionArrayDict = {};\r\n    predictionArrayDict['predictionArray'] = predictionArray;\r\n\r\n    // Update the firebase with this data\r\n    // The prediction array will be automatically updated due to firesbase snapshot\r\n\r\n    firebase\r\n      .firestore()\r\n      .collection('predictions')\r\n      .doc(this.state.loginId)\r\n      .set(predictionArrayDict);\r\n\r\n    // Finally update the current state of this class\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  addPrediction(number) {\r\n    console.log('Add Prediction called');\r\n    // console.log(number);\r\n    const predictionArray = this.state.predictionArray;\r\n\r\n    // Already exists or not\r\n    if (!this.state.predictionArray.includes(number)) {\r\n      // this.handleDialogOpen(players[0], number);\r\n\r\n      // Check if 7 are done, show the warning that he has chose all 7 and he has to unpredict one\r\n      if (this.state.predictionArray.length >= 7) {\r\n        // Limit of 7 exceeded\r\n        // Using the same login fail warning dialog\r\n        this.setState({\r\n          loginFail: true,\r\n          loginFailHeading: 'Limit Exceed 7 Players!',\r\n          loginFailDesc: 'Please unpredict one or more to predict this one',\r\n        });\r\n      } else {\r\n        // Proceed as limit not exceeded yet\r\n        predictionArray.push(number);\r\n\r\n        this.setState({\r\n          predictionArray: predictionArray,\r\n        });\r\n      }\r\n    } else {\r\n      //unpredict part of button\r\n      const indexx = predictionArray.indexOf(number);\r\n      predictionArray.splice(indexx, 1);\r\n      // console.log(indexx);\r\n\r\n      this.setState({\r\n        predictionArray: predictionArray,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    try {\r\n      this.firebaseListener();\r\n    } catch(error) {\r\n      console.log(\"Ignore Error in predict\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Messages Dialog\r\n    const loginMessageDialog = (\r\n      <Dialog\r\n        open={this.state.loginFail}\r\n        onClose={this.handleFailDialogClose}\r\n        aria-labelledby=\"Login Failed\"\r\n        aria-describedby=\"Fail dialog\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {this.state.loginFailHeading}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {this.state.loginFailDesc}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={this.handleFailDialogClose}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n\r\n    // First check if loggined\r\n    if (this.state.loginId) {\r\n      // document.getElementById('submitBtn').disabled = false -----> write this in reachJS :p\r\n\r\n      if (this.state.toShowPriority) {\r\n        return <Priority loginId={this.state.loginId} />;\r\n      } else {\r\n        // This is for predictions\r\n        const items = [];\r\n        for (let i = 1; i <= 60; i++) {\r\n          var status = this.state.predictionArray.includes(i);\r\n          items.push(\r\n            <MyCard\r\n              key={i}\r\n              img={i}\r\n              name={players[i]}\r\n              status={status}\r\n              type=\"Bowler\"\r\n              handler={() => this.addPrediction(i)}\r\n            />,\r\n          );\r\n        }\r\n\r\n        var submitButton = <Button disabled>Submit</Button>;\r\n\r\n        if (this.state.predictionArray.length >= 7) {\r\n          submitButton = (\r\n            <button onClick={this.handleDialogOpen} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <div id=\"prediction-gallery\">\r\n            <div className=\"container\">\r\n              <h2 className=\"center\">Make your predictions</h2>\r\n              <div style={{ display: 'flex' }}>\r\n                {submitButton}\r\n                <div style={{ padding: '6px' }}>\r\n                  This button will be enabled once you predict all 7 players. :)\r\n                </div>\r\n              </div>\r\n              <div id=\"prediction-gallery-row\" className=\"row\">\r\n                {items}\r\n              </div>\r\n            </div>\r\n\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleDialogClose}\r\n              aria-labelledby=\"Login Failed\"\r\n              aria-describedby=\"Fail dialog\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\">\r\n                {this.state.dialogName}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Are you sure you want to go ahead with this? <strong> You can still make changes!</strong>\r\n\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                  No\r\n                </Button>\r\n                <Button\r\n                  onClick={this.handlePlayerConfirm}\r\n                  color=\"primary\"\r\n                  autoFocus\r\n                >\r\n                  Yes\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Using this message dialog for other works also */}\r\n            {loginMessageDialog}\r\n          </div>\r\n        );\r\n      }\r\n    } // End of login if\r\n    else {\r\n\r\n      let toShowLoginHandler = '';\r\n\r\n      const isLoading = this.state.isLoading;\r\n      if (!isLoading) {\r\n        toShowLoginHandler = <LoginHandler submitHandler={this.loginSubmitHandler} />;\r\n      } else {\r\n        // The request has been made\r\n        toShowLoginHandler = <ReactLoading key={0} type={\"cylon\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\r\n      }\r\n\r\n      return (\r\n        <div id=\"prediction-login\">\r\n          <h1 className=\"center\" style={{ margin: '12px' }}>\r\n            Prediction/IPO Round Login\r\n          </h1>\r\n\r\n          {toShowLoginHandler}\r\n\r\n          {loginMessageDialog}\r\n        </div>\r\n      );\r\n    }\r\n  } // End of render\r\n}\r\n\r\nexport default Predict;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport players from '../data/players.json';\r\nimport adjective from '../data/adjective.json';\r\nimport bidprice from '../data/bidprice.json';\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function SimplePlayerCard(props) {\r\n  const classes = useStyles();\r\n\r\n  /**\r\n   * value\r\n   * highQuality\r\n   * colSize\r\n   * price\r\n   * sold\r\n   * toShowBidPrice\r\n   */\r\n\r\n  let imgSrc = 'cpng/' + props.value + '.jpg';\r\n  if (props.highQuality) {\r\n    imgSrc = 'images/png/' + props.value + '.png';\r\n  }\r\n\r\n  let colToUse = 4; // Numric value\r\n  if (props.colSize) {\r\n    colToUse = props.colSize;\r\n  }\r\n\r\n  let fullHeight = 'simple-player-card height-in-percent';\r\n  if (props.fixedHeight) {\r\n    fullHeight = 'simple-player-card';\r\n  }\r\n\r\n  var priceSection = '';\r\n  var bought = 'col-sm-' + colToUse + ' not-sold-player';\r\n  if (props.price) {\r\n    priceSection = <p>Sold Rs. {props.price}</p>;\r\n    if (props.sold) {\r\n      bought = 'col-sm-' + colToUse + ' sold-player';\r\n    }\r\n  }\r\n\r\n  let bidPrice = '';\r\n  if (props.toShowBidPrice) {\r\n    bidPrice = <p>Starting Bid Rs. {bidprice[props.value]}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={bought} onClick={props.handler}>\r\n      <Card className={fullHeight}>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            <img className=\"gallery-item\" src={imgSrc} alt=\"Player\"></img>\r\n          </Typography>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {players[props.value]}\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {adjective[props.value]}\r\n          </Typography>\r\n          {bidPrice}\r\n          {priceSection}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport playerdata from '../data/playerData.json';\r\n\r\nexport default function Stats(props) {\r\n  //Props receive playerno props.playerNo\r\n  var pdata = playerdata[props.playerNo];\r\n  const heading = [];\r\n  const data = {};\r\n  try {\r\n    for (const [year, value] of Object.entries(pdata)) {\r\n      // use key and value\r\n      heading.push(<td key={year} style={{ fontWeight: 'bold' }}>{year}</td>);\r\n      for (const [field, value1] of Object.entries(value)) {\r\n        if (data[field]) {\r\n          data[field].push(value1);\r\n        } else {\r\n          data[field] = [value1];\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log('stats.js mein sed lyf 3');\r\n  }\r\n\r\n  const Body = [];\r\n  for (var field in data) {\r\n    const tempList = [];\r\n    tempList.push(<td key={0} style={{ fontWeight: 'bold' }}>{field}</td>);\r\n\r\n    let j = 1;\r\n    for (var ob in data[field]) {\r\n      tempList.push(<td key={j}>{data[field][ob]}</td>);\r\n      j++;\r\n    }\r\n    Body.push(<tr key={field} >{tempList}</tr>);\r\n  }\r\n\r\n  // console.log('playerdata: ', data);\r\n\r\n  return (\r\n    <div\r\n      id=\"player-stats\"\r\n      className=\"jumbotron\"\r\n      style={{ margin: '22px', padding: '10px' }}\r\n    >\r\n      <table className=\"table table-borderless\">\r\n        <thead>\r\n          <tr>\r\n            <td></td>\r\n\r\n            {heading}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{Body}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Fragment } from 'react';\r\n// import * as firebase from 'firebase';\r\nimport Predict from '../predict';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SimplePlayerCard from '../SimplePlayerCard';\r\nimport Stats from '../Stats';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nfunction MiddleBlock(props) {\r\n  if (props.currentMain) {\r\n    // Team 1 to 8\r\n\r\n    // This current has been changed to dictionary\r\n    var current = props.teams[props.currentMain];\r\n\r\n    var cardsElementList = [];\r\n    // current.map((element, index) => {\r\n    //   console.log(element);\r\n    //   cardsElementList.push(<SimplePlayerCard value={element} />);\r\n    //   return false;\r\n    // });\r\n\r\n    for (var key in current) {\r\n      // console.log('Creating middle block', key, current[key]);\r\n      cardsElementList.push(\r\n        <SimplePlayerCard key={key} value={key} price={current[key]} />,\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <h5 className=\"center\" style={{ margin: '12px' }}>\r\n          Money left with this team : {props.moneyLeft}{' '}\r\n        </h5>\r\n        <div className=\"row\">{cardsElementList}</div>\r\n      </Fragment>\r\n    );\r\n  } else {\r\n    // Above Auction One\r\n\r\n    if (props.currentMain === 'unsold') {\r\n      return 'UNSOLD ONE';\r\n    } else {\r\n      // This is the curretn Auction status\r\n      // return `Current Auction going for ${props.round} `;\r\n\r\n      let predictedByList = [];\r\n      try {\r\n        props.predictedByList.forEach((data, index) => {\r\n          predictedByList.push(<li key={index} style={{ marginLeft: '24px' }}>{data}</li>);\r\n        });\r\n      } catch (err) {\r\n        // Here error will come when it is prediccted by none\r\n        // i.e predictedByList is empty\r\n        predictedByList.push(<p key={0} className=\"center\"> No Team</p>);\r\n      }\r\n\r\n      if (props.isPredictionLoading) {\r\n        predictedByList = <ReactLoading key={0} type={\"balls\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\r\n      }\r\n\r\n      let ipoList = [];\r\n      let prioritiesDict = props.prioritiesDict;\r\n      try {\r\n        for (var pno in prioritiesDict) {\r\n          ipoList.push(<li key={pno} style={{ fontSize:\"12px\" }}>{prioritiesDict[pno]} - {(100 / prioritiesDict.length).toFixed(2)} %</li>)\r\n        }\r\n\r\n        if (!prioritiesDict.length) {\r\n          ipoList.push(<p key={0} className=\"center\"> No Team</p>);\r\n        }\r\n\r\n      } catch (err) {\r\n        // Here error will come when it is prediccted by none\r\n        // i.e predictedByList is empty\r\n        ipoList.push(<p key={0} className=\"center\"> No Team</p>);\r\n      }\r\n\r\n      if (props.isPrioritiesLoading) {\r\n        ipoList = <ReactLoading key={0} type={\"balls\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\r\n      }\r\n\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-3 col-md-5\">\r\n            <SimplePlayerCard\r\n              colSize=\"12\"\r\n              highQuality={true}\r\n              value={props.round}\r\n              toShowBidPrice={true}\r\n              fixedHeight={true}\r\n            />\r\n\r\n            <div\r\n              id=\"priority-by-list\"\r\n              className=\"jumbotron\"\r\n              style={{ margin: '12px', padding: \"20px 32px\" }}\r\n            >\r\n              <h3 className=\"center\" style={{ color: \"#424242\" }}>IPO shares</h3>\r\n\r\n              {ipoList}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-sm-9 col-md-7\">\r\n            <Stats key={props.round} playerNo={props.round} />\r\n\r\n            <div\r\n              id=\"predicted-by-list\"\r\n              className=\"jumbotron prediction\"\r\n              style={{ margin: '12px', padding: \"20px 32px\" }}\r\n            >\r\n              <h3 className=\"center\" style={{ color: \"#424242\" }}>Predicted By</h3>\r\n\r\n              {predictedByList}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction LeftTabs(props) {\r\n  var heading = 'Auction Status';\r\n\r\n  if (props.value) {\r\n    heading = props.teamName;\r\n  }\r\n\r\n  let background = 'white';\r\n  if (props.current === props.value) {\r\n    background = 'rgba(255,255,255,0.6)'\r\n  }\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      key={props.value}\r\n      onClick={props.handler}\r\n      style={{ margin: '14px auto', background: background, borderRadius: \"5px\" }}\r\n    >\r\n      <ListItemText primary={heading} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teams: {\r\n        1: [12, 14],\r\n        2: [15, 16, 19],\r\n        3: [30, 10],\r\n        4: [1],\r\n        5: [2],\r\n        6: [4],\r\n        7: [5],\r\n        8: [6, 7, 9],\r\n      },\r\n      currentMain: 0,\r\n      teamCodes: {\r\n        1: 'asdfgh',\r\n        2: 'hgfdsa',\r\n      },\r\n      teamNames: {\r\n        1: 'Team 1',\r\n        2: 'Team 2',\r\n        3: 'Team 3',\r\n        4: 'Team 4',\r\n        5: 'Team 5',\r\n        6: 'Team 6',\r\n        7: 'Team 7',\r\n        8: 'Team 8',\r\n      },\r\n      moneyLeft: {\r\n        1: 100,\r\n        2: 200,\r\n        3: 300,\r\n        4: 400,\r\n        5: 500,\r\n        6: 600,\r\n        7: 700,\r\n        8: 800,\r\n      },\r\n      predictionDict: {\r\n        1: [],\r\n        2: [],\r\n        3: [],\r\n      },\r\n      isPredictionLoading: false,\r\n      prioritiesDict: {},\r\n      isPrioritiesLoading: false\r\n    };\r\n  }\r\n\r\n  updateCurrrentMain(i) {\r\n    // console.log('update current main', i);\r\n    this.setState({\r\n      currentMain: i,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n\r\n    // Snapshot for players sold\r\n    db.collection('team_players').onSnapshot((snap) => {\r\n      var empty_dict = {};\r\n      snap.forEach((doc) => {\r\n        empty_dict[doc.id] = doc.data();\r\n      });\r\n\r\n      // Empty dict created with all the values\r\n      this.setState({\r\n        teams: empty_dict,\r\n      });\r\n    });\r\n\r\n    // A simple fetch for team names\r\n    db.collection('selectedTeams')\r\n      .get()\r\n      .then((snap) => {\r\n        let teamNamesDict = {};\r\n        let teamCodesDict = {};\r\n        snap.forEach((doc) => {\r\n          teamNamesDict[doc.id] = doc.data()['teamName'];\r\n          teamCodesDict[doc.data()['teamCode']] = doc.id;\r\n        });\r\n\r\n        this.setState({\r\n          teamNames: teamNamesDict,\r\n          teamCodes: teamCodesDict,\r\n          isPredictionLoading: true\r\n        });\r\n\r\n        // predictions list to be extracted from firebase\r\n        db.collection('predictions')\r\n          .get()\r\n          .then((snap) => {\r\n            let predictedTeams = {};\r\n\r\n            snap.forEach((doc) => {\r\n              const predictionArray = doc.data()['predictionArray'];\r\n              for (let i = 0; i < predictionArray.length; i++) {\r\n                if (predictedTeams[predictionArray[i]]) {\r\n                  predictedTeams[predictionArray[i]].push(\r\n                    teamNamesDict[teamCodesDict[doc.id]],\r\n                  );\r\n                } else {\r\n                  predictedTeams[predictionArray[i]] = [\r\n                    teamNamesDict[teamCodesDict[doc.id]],\r\n                  ];\r\n                }\r\n              }\r\n            });\r\n\r\n            this.setState({\r\n              predictionDict: predictedTeams,\r\n              isPredictionLoading: false\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log('Team Name Fetch failed');\r\n\r\n            this.setState({\r\n              isPredictionLoading: false\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log('Team Name Fetch failed');\r\n      });\r\n\r\n    // A snapshot for money left\r\n    db.collection('selectedTeams').onSnapshot(\r\n      (snap) => {\r\n        let moneyLeftDict = {};\r\n        snap.forEach((doc) => {\r\n          moneyLeftDict[doc.id] = doc.data()['money'];\r\n        });\r\n\r\n        this.setState({\r\n          moneyLeft: moneyLeftDict,\r\n        });\r\n\r\n        // console.log(this.state.moneyLeft);\r\n      },\r\n      (error) => {\r\n        console.log('Money left snapshot failed', error);\r\n      },\r\n    );\r\n\r\n    // For the priorites\r\n    this.setState({\r\n      isPrioritiesLoading: true\r\n    });\r\n\r\n    db.collection('priorityPlayers').get()\r\n      .then((snap) => {\r\n        let tempDict = {};\r\n        db.collection(\"unselectedTeams\").get().then(data => {\r\n          let unselectedTeamNames = {}\r\n          data.forEach(doc => {\r\n            unselectedTeamNames[doc.id] = doc.data()['teamName']\r\n          })\r\n          snap.forEach(doc => {\r\n            let parray = doc.data()[\"teams\"]\r\n            let tempArray = []\r\n            parray.forEach(value => {\r\n              tempArray.push(unselectedTeamNames[value])\r\n            })\r\n          tempDict[doc.id] = tempArray;\r\n        });\r\n\r\n        this.setState({\r\n          prioritiesDict: tempDict,\r\n          isPrioritiesLoading: false\r\n        });\r\n        })\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Fetch of priorities failed\");\r\n        this.setState({\r\n          isPrioritiesLoading: false\r\n        });\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    const round = this.props.round;\r\n\r\n    if (round === 'prediction') {\r\n      return <Predict />;\r\n    } else {\r\n      // First creation of Left menu\r\n      const leftBar = [];\r\n      for (let i = 0; i <= 8; i++) {\r\n        // For first one is the auction one\r\n\r\n        leftBar.push(\r\n          <LeftTabs\r\n            key={i}\r\n            value={i}\r\n            handler={() => this.updateCurrrentMain(i)}\r\n            teamName={this.state.teamNames[i]}\r\n            current={this.state.currentMain}\r\n          />,\r\n        );\r\n      }\r\n\r\n      const currentMain = this.state.currentMain;\r\n\r\n      return (\r\n        <div id=\"auction-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3\">\r\n              <List\r\n                style={{\r\n                  position: \"sticky\",\r\n                  top: 0\r\n                }}\r\n                id=\"left-bar\"\r\n              >\r\n                {leftBar}\r\n              </List>\r\n            </div>\r\n            <div className=\"col-sm-9\">\r\n              <MiddleBlock\r\n                moneyLeft={this.state.moneyLeft[currentMain]}\r\n                currentMain={currentMain}\r\n                teams={this.state.teams}\r\n                round={this.props.round}\r\n                predictedByList={this.state.predictionDict[this.props.round]}\r\n                isPredictionLoading={this.state.isPredictionLoading}\r\n                prioritiesDict={this.state.prioritiesDict[this.props.round]}\r\n                isPrioritiesLoading={this.state.isPrioritiesLoading}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport SimplePlayerCard from '../SimplePlayerCard';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Stats from '../Stats';\r\nimport playerNames from '../../data/players.json';\r\n\r\nclass Player extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      soldDict: {},\r\n      toOpen: false,\r\n      currentClick: 1,\r\n    };\r\n    //this.handleDialogOpen = this.handleDialogOpen.bind(this)\r\n\r\n    // Unsubscribe from firebase use\r\n    this.unsubscribe = firebase.firestore().collection('team_players').onSnapshot(\r\n      (snap) => {\r\n        var soldDict = {};\r\n        snap.forEach((doc) => {\r\n          const data = doc.data();\r\n          for (var key in data) {\r\n            soldDict[key] = data[key];\r\n          }\r\n        });\r\n\r\n        // Finally update the ones who are sold\r\n        this.setState({\r\n          soldDict: soldDict,\r\n        });\r\n      },\r\n      (err) => {\r\n        console.log('Fetch Failed');\r\n      },\r\n    );\r\n  }\r\n\r\n  handleFailDialogClose = () => {\r\n    this.setState({\r\n      toOpen: false,\r\n    });\r\n  };\r\n\r\n  handleDialogOpen(i) {\r\n    this.setState({\r\n      toOpen: true,\r\n      currentClick: i,\r\n    });\r\n    // console.log('handle dialog open', i);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const soldDict = this.state.soldDict;\r\n\r\n    const array = [];\r\n    for (let i = 1; i <= 60; i++) {\r\n      array.push(i);\r\n    }\r\n\r\n    const elementArr = array.map((i) => (\r\n      <SimplePlayerCard\r\n        key={i}\r\n        value={i}\r\n        sold={true}\r\n        handler={() => this.handleDialogOpen(i)}\r\n        price={soldDict[i]}\r\n        colSize=\"3\"\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">{elementArr}</div>\r\n\r\n        <Dialog\r\n          open={this.state.toOpen}\r\n          onClose={this.handleFailDialogClose}\r\n          aria-labelledby=\"Login Failed\"\r\n          aria-describedby=\"Fail dialog\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\" style={{ textAlign: 'center' }}>\r\n            {playerNames[this.state.currentClick]}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              <Stats playerNo={this.state.currentClick} />\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={this.handleFailDialogClose}\r\n              color=\"primary\"\r\n              autoFocus\r\n            >\r\n              close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React, { Fragment } from 'react';\r\nimport playerName from '../data/players.json';\r\n\r\nfunction TeamCard(props) {\r\n  const teamMember = props.teamMember;\r\n  const teamMemberComponent = [];\r\n  const predictionComponent = [];\r\n  const shares = props.shares;\r\n  const boughtSharesComponent = [];\r\n\r\n  for(var player in shares){\r\n    boughtSharesComponent.push(<li>{playerName[player]} - {shares[player]}%</li>) \r\n  }\r\n\r\n  try {\r\n    for (let i = 0; i < teamMember.length; i++) {\r\n      teamMemberComponent.push(\r\n        <li key={i} className=\"teamMemberList\">\r\n          {teamMember[i]}\r\n        </li>,\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.log('sed life');\r\n  }\r\n\r\n  let title = 'Predicted Players';\r\n  if (props.priority) {\r\n    title = 'Chosen Players';\r\n\r\n    try {\r\n      for (let i = 0; i < props.prediction_arr.priorityArray.length; i++) {\r\n        const imgSrc = 'cpng/' + props.prediction_arr.priorityArray[i] + '.jpg';\r\n\r\n        predictionComponent.push(\r\n          <div key={i} className=\"predictionList col-sm-1\">\r\n            <div class=\"card\" style={{ width: '8rem', height: '95%' }}>\r\n              <img\r\n                src={imgSrc}\r\n                class=\"card-img-top\"\r\n                alt={playerName[props.prediction_arr.priorityArray[i]]}\r\n              />\r\n              <div class=\"card-body\">\r\n                <p class=\"card-text\">\r\n                  {playerName[props.prediction_arr.priorityArray[i]]}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>,\r\n        );\r\n      }\r\n\r\n      predictionComponent.push(\r\n        <div className=\"shares col-sm-2 center\" style={{\"background\": \"white\" , \"borderRadius\" : \"10px\" , \"maxWidth\": \"200px\" , \"marginLeft\" : \"35px\" , \"height\":\"auto\" , \"overflow\":\"auto\" , }}>\r\n          <h5 style={{\"paddingTop\":\"10px\"}}>Purchased Shares</h5>\r\n          <ul style={{\"padding\": \"0px\" , \"listStyle\": \"none\" , \"alignContent\" : \"left\" , \"textAlign\" : \"left\" , \"fontSize\":\"13px\"}}>\r\n            {boughtSharesComponent}\r\n          </ul>\r\n        </div>\r\n      )\r\n    } catch (error) {\r\n      console.log('sed life 2');\r\n    }\r\n\r\n  } else {\r\n    try {\r\n      for (let i = 0; i < props.prediction_arr.predictionArray.length; i++) {\r\n        const imgSrc =\r\n          'cpng/' + props.prediction_arr.predictionArray[i] + '.jpg';\r\n\r\n        predictionComponent.push(\r\n          <div key={i} className=\"predictionList col-sm-1\">\r\n            <div class=\"card\" style={{ width: '8rem', height: '95%' }}>\r\n              <img\r\n                src={imgSrc}\r\n                class=\"card-img-top\"\r\n                alt={playerName[props.prediction_arr.predictionArray[i]]}\r\n              />\r\n              <div class=\"card-body\">\r\n                <p class=\"card-text\">\r\n                  {playerName[props.prediction_arr.predictionArray[i]]}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>,\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log('sed life 2');\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <h4 className=\"titleOfpredict\">{title}</h4>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-3\">\r\n          <div className=\"card\" style={{ width: '90%' }}>\r\n            <div className=\"card-body\">\r\n              <h5 className=\"teamNames\">Team Name - {props.teamName}</h5>\r\n              <h6 className=\"teamLeaders mb-2 text-muted\">\r\n                {' '}\r\n                Team Leader - {props.teamLeader}\r\n              </h6>\r\n              <p className=\"teamMembers\"> Members - {teamMemberComponent}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {predictionComponent}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TeamCard;\r\n","import React, {Fragment} from 'react';\r\n\r\nimport '../css/teams.css';\r\nimport TeamCard from './teamCard.js';\r\n\r\nexport default class UnselectedTeams extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teamDetails: this.props.unSelectedTeams,\r\n      priorityDict: this.props.priorityDict,\r\n      sharesDict : this.props.sharesDict,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const teamDetails = this.state.teamDetails;\r\n\r\n    const teamCodes = [];\r\n    const teamNames = [];\r\n    const teamMembers = [];\r\n    const teamLeaders = [];\r\n    const allTeamsComponent = [];\r\n    const priorityDict = this.state.priorityDict;\r\n\r\n    for (let key in teamDetails) {\r\n      teamNames.push(teamDetails[key]['teamName']);\r\n      teamMembers.push(teamDetails[key]['teamMembers']);\r\n      teamLeaders.push(teamDetails[key]['teamLeader']);\r\n      teamCodes.push(teamDetails[key]['teamCode']);\r\n    }\r\n\r\n    //sharedDict = teamCode : player : share\r\n\r\n    for (let key = 1; key < teamCodes.length + 1; key++) {\r\n      // console.log(\"Sending data of team\" , teamCodes[key-1])\r\n      allTeamsComponent.push(\r\n        <TeamCard\r\n          key={key}\r\n          teamName={teamNames[key - 1]}\r\n          teamMember={teamMembers[key - 1]}\r\n          teamLeader={teamLeaders[key - 1]}\r\n          teamCode={teamCodes[key - 1]}\r\n          prediction_arr={priorityDict[teamCodes[key - 1]]}\r\n          priority={true}\r\n          shares = {this.state.sharesDict[teamCodes[key-1]]}\r\n        />,\r\n      );\r\n    }\r\n\r\n    return <Fragment>{allTeamsComponent}</Fragment>;\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport '../../css/teams.css';\r\nimport UnseletedTeams from '../unselectedTeams';\r\nimport TeamCard from '../teamCard.js';\r\n\r\nclass Teams extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      teamDetails: {},\r\n      predictionDict: {},\r\n      toShowSelected: true,\r\n      unTeamDetails: {},\r\n      priorityDict: {},\r\n      sharesDict: {}\r\n    };\r\n\r\n    // Adding firebase listeners in constructor so that they can be unsubscribed later\r\n    this.unsubscribe = firebase.firestore().collection('selectedTeams') //change this back to selected teams :p\r\n      .onSnapshot(\r\n        (snap) => {\r\n          var Dict = {};\r\n          snap.forEach((doc) => {\r\n            const data = doc.data();\r\n            Dict[doc.id] = data;\r\n          });\r\n\r\n          this.setState({\r\n            teamDetails: Dict,\r\n          });\r\n        },\r\n        (err) => {\r\n          console.log('Fetch Failed');\r\n        },\r\n      );\r\n\r\n    this.unsubscribeForUnselected = firebase.firestore()\r\n      .collection('unselectedTeams') //change this back to selected teams :p\r\n      .onSnapshot(\r\n        (snap) => {\r\n          var Dict = {};\r\n          snap.forEach((doc) => {\r\n            const data = doc.data();\r\n            Dict[doc.id] = data;\r\n          });\r\n\r\n          this.setState({\r\n            unTeamDetails: Dict,\r\n          });\r\n        },\r\n        (err) => {\r\n          console.log('Fetch Failed');\r\n        },\r\n      );\r\n  } // End of constructor\r\n\r\n  showSelected = () => {\r\n    this.setState({\r\n      toShowSelected: true,\r\n    });\r\n  };\r\n\r\n  showUnselected = () => {\r\n    this.setState({\r\n      toShowSelected: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    // console.log(this.props.round);\r\n\r\n    if (this.props.round !== 'prediction') {\r\n      // console.log('if is working');\r\n\r\n      var predictionArray = {};\r\n\r\n      firebase.firestore().collection('predictions')\r\n        .get()\r\n        .then((snap) => {\r\n          snap.forEach((doc) => {\r\n            predictionArray[doc.id] = doc.data();\r\n          });\r\n\r\n          this.setState({\r\n            predictionDict: predictionArray,\r\n          });\r\n        });\r\n\r\n      var priorityArray = {};\r\n\r\n      firebase.firestore().collection('priority')\r\n        .get()\r\n        .then((snap) => {\r\n          snap.forEach((doc) => {\r\n            priorityArray[doc.id] = doc.data();\r\n          });\r\n\r\n          this.setState({\r\n            priorityDict: priorityArray,\r\n          });\r\n\r\n        });\r\n\r\n      let sharesDict = {};\r\n\r\n      firebase.firestore().collection(\"priorityPlayers\").get().then((snap) => {\r\n        snap.forEach((doc) => {\r\n          var playerNo = doc.id;\r\n          var teamOwners = doc.data()[\"teams\"];\r\n          var percentShare = Math.floor(100 / teamOwners.length);\r\n          for (var i = 0; i < teamOwners.length; i++) {\r\n            if (!sharesDict[teamOwners[i]]) {\r\n              sharesDict[teamOwners[i]] = {};\r\n            }\r\n            sharesDict[teamOwners[i]][playerNo] = percentShare;\r\n          }\r\n        })\r\n\r\n        // console.log(\"Shares Dict\", sharesDict)\r\n        this.setState({\r\n          sharesDict: sharesDict,\r\n        })\r\n      });\r\n\r\n    } else {\r\n      console.log('prediction is going on');\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n    this.unsubscribeForUnselected();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.toShowSelected) {\r\n      const teamDetails = this.state.teamDetails;\r\n\r\n      const teamCodes = [];\r\n      const teamNames = [];\r\n      const teamMembers = [];\r\n      const teamLeaders = [];\r\n      const allTeamsComponent = [];\r\n      const predictionDict = this.state.predictionDict;\r\n\r\n      for (let key in teamDetails) {\r\n        teamNames.push(teamDetails[key]['teamName']);\r\n        teamMembers.push(teamDetails[key]['teamMembers']);\r\n        teamLeaders.push(teamDetails[key]['teamLeader']);\r\n        teamCodes.push(teamDetails[key]['teamCode']);\r\n      }\r\n\r\n      for (let key in teamDetails) {\r\n        allTeamsComponent.push(\r\n          <TeamCard\r\n            key={key}\r\n            teamName={teamNames[key - 1]}\r\n            teamMember={teamMembers[key - 1]}\r\n            teamLeader={teamLeaders[key - 1]}\r\n            teamCode={teamCodes[key - 1]}\r\n            prediction_arr={predictionDict[teamCodes[key - 1]]}\r\n          />,\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Fragment>\r\n          <div id=\"navbar\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col center\" onClick={this.showSelected}>\r\n                {' '}\r\n                Teams for Auction\r\n              </div>\r\n              <div className=\"col center text-info\" onClick={this.showUnselected}>\r\n                {' '}\r\n                Teams for IPO{' '}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"container-fluid\">{allTeamsComponent}</div>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <div id=\"navbar\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col center text-info\" onClick={this.showSelected}>\r\n                {' '}\r\n                Teams for Auction\r\n              </div>\r\n              <div className=\"col center\" onClick={this.showUnselected}>\r\n                {' '}\r\n                Teams for IPO{' '}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"container-fluid\">\r\n            <UnseletedTeams unSelectedTeams={this.state.unTeamDetails} priorityDict={this.state.priorityDict} sharesDict={this.state.sharesDict} />\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Teams;\r\n","import React from 'react';\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport LoginHandler from './LoginHandler';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Quiz extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // sTVm5NerQMaqUnWWxQoN\r\n\r\n    this.state = {\r\n      userID: '',\r\n      currentQuestionNumber: 1,\r\n      currentQuestion: '',\r\n      answer: '',\r\n      questions: {},\r\n      answerDict: {\r\n        1: '',\r\n        2: '',\r\n        3: '',\r\n        4: '',\r\n        5: '',\r\n        6: '',\r\n        7: '',\r\n        8: '',\r\n        9: '',\r\n        10: '',\r\n        11: '',\r\n        12: '',\r\n      },\r\n      loginFail: false,\r\n      isLoading: false\r\n    };\r\n    this.updateQuestion = this.updateQuestion.bind(this);\r\n    this.handleAnswerInput = this.handleAnswerInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.loginSubmitHandler = this.loginSubmitHandler.bind(this);\r\n    this.handleDialogClose = this.handleDialogClose.bind(this);\r\n  }\r\n\r\n  handleDialogClose() {\r\n    this.setState({\r\n      loginFail: false,\r\n    });\r\n  }\r\n\r\n  updateQuestion(value) {\r\n    this.setState({\r\n      currentQuestion: value,\r\n    });\r\n  }\r\n\r\n  handleAnswerInput(event) {\r\n    this.setState({ answer: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    var answer = this.state.answer;\r\n    var Qno = this.state.currentQuestionNumber;\r\n    event.preventDefault();\r\n\r\n    var tempDict = {};\r\n    tempDict[Qno] = answer;\r\n\r\n    const db = firebase.firestore();\r\n    db.collection('answers')\r\n      .doc(this.state.userID)\r\n      .set(tempDict, { merge: true });\r\n\r\n    var newQno = this.state.currentQuestionNumber + 1;\r\n\r\n    if (newQno > 12) {\r\n      newQno = 1;\r\n    }\r\n\r\n    this.setState({\r\n      answer: '',\r\n      currentQuestionNumber: newQno,\r\n      currentQuestion: this.state.questions[newQno],\r\n    });\r\n  }\r\n\r\n  //for toggling between questions using tabs\r\n\r\n  questionTab(i) {\r\n    this.setState({\r\n      currentQuestion: this.state.questions[i],\r\n      currentQuestionNumber: i,\r\n    });\r\n  }\r\n\r\n  loginSubmitHandler(val) {\r\n    // console.log('Submit Hanlder called', val);\r\n\r\n    const db = firebase.firestore();\r\n    const answersRef = db.collection('answers').doc(val);\r\n\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n\r\n    answersRef\r\n      .get()\r\n      .then((docSnapshot) => {\r\n        if (docSnapshot.exists) {\r\n          // Doc exists so login successful\r\n\r\n          // Now update the state\r\n          this.setState({\r\n            userID: val,\r\n            isLoading: false\r\n          });\r\n\r\n          answersRef.onSnapshot(\r\n            (snap) => {\r\n              this.setState({\r\n                answerDict: snap.data(),\r\n              });\r\n            },\r\n            (err) => {\r\n              console.log(`Encountered error: ${err}`);\r\n            },\r\n          );\r\n        } else {\r\n          this.setState({\r\n            loginFail: true,\r\n            isLoading: false\r\n          });\r\n        }\r\n      })\r\n      .catch( (err) => {\r\n        alert('Network connection Error');\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n      }); // End of answersRef get\r\n  }\r\n\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n    const doc = db.collection('questions').doc('questionSet');\r\n\r\n    doc\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          // console.log(doc.data());\r\n          // console.log(this.state.currentQuestion);\r\n\r\n          this.setState({\r\n            currentQuestion: doc.data()[this.state.currentQuestionNumber],\r\n            questions: doc.data(),\r\n          });\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log('No such document!');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error getting document:', error);\r\n      });\r\n\r\n  } // End of componentDidMount\r\n\r\n  render() {\r\n    // First chck if the ID is entered on not\r\n\r\n    if (this.state.userID) {\r\n      //  for the questions tabs\r\n      const tabs = () => {\r\n        var total = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n        return total.map((i) => {\r\n          var colorType = 'btn-success';\r\n          if (!this.state.answerDict[i]) {\r\n            colorType = 'btn-warning';\r\n          }\r\n          return (\r\n            <button\r\n              key={i}\r\n              onClick={() => this.questionTab(i)}\r\n              className={`btn tabs ${colorType}`}\r\n            >\r\n              {i}\r\n            </button>\r\n          );\r\n        });\r\n      };\r\n\r\n\r\n      return (\r\n        <div>\r\n          <h1 className=\"center\" style={{ margin: \"12px 0 16px 0\" }}>Quiz Round</h1>\r\n          <div id=\"quiz-box\" className=\"container\">\r\n            <div className=\"jumbotron\">\r\n              <h3 style={{marginLeft : \"5px\"}}>\r\n                Question {this.state.currentQuestionNumber}\r\n              </h3>\r\n              <p className=\"lead question\" style={{ color:\"black\" , whiteSpace: 'pre-line' , borderStyle : 'outset' , padding:\"15px\" , borderRadius : \"10px\" , background:\"#f0f2db\"}}>\r\n                {this.state.currentQuestion}\r\n              </p>\r\n              <hr className=\"my-4\" />\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"input-gap center\" >\r\n                  <TextareaAutosize\r\n                    style={{width:\"100%\" , height:\"100px\" , background:\"#efefea\" , borderRadius:\"5px\"}}\r\n                    onChange={this.handleAnswerInput}\r\n                    value={this.state.answer}\r\n                    placeholder={\r\n                      this.state.answerDict[this.state.currentQuestionNumber]\r\n                    }\r\n                    rowsMin={3}\r\n                  ></TextareaAutosize>\r\n                </div>\r\n                <div className=\"lead center\">\r\n                  <button type=\"Submit\" className=\"btn btn-info\" style={{width:\"80px\"}}>\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"container\">\r\n            <div id=\"questions-tab\" className=\"row\" style={{marginLeft:\"14vw\"}}>\r\n              {tabs()}\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      );\r\n    } // End of userId If\r\n    else {\r\n\r\n      let toShowLoginHandler = '';\r\n\r\n      const isLoading = this.state.isLoading;\r\n      if (!isLoading) {\r\n        toShowLoginHandler = <LoginHandler submitHandler={this.loginSubmitHandler} />;\r\n      } else {\r\n        // The request has been made\r\n        toShowLoginHandler =  <ReactLoading key={0} type={\"cylon\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\r\n      }\r\n\r\n      return (\r\n        <div id=\"quiz-login\">\r\n          <h1 className=\"center\" style={{ margin: \"12px 0 16px 0\" }}>Quiz Round</h1>\r\n          {toShowLoginHandler}\r\n\r\n          <Dialog\r\n            open={this.state.loginFail}\r\n            onClose={this.handleDialogClose}\r\n            aria-labelledby=\"Login Failed\"\r\n            aria-describedby=\"Fail dialog\"\r\n          >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n              Login Unsuccessful\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                Please check you secret Id and try again!\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                close\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReactLoading from 'react-loading';\r\n\r\nconst themesArray = ['default', 'tblue', 'tred', 'tgreen', 'tyellow']\r\n\r\nclass Messages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messagesArray: [],\r\n      cTheme: 0\r\n    };\r\n\r\n\r\n    this.unsubscribe = firebase\r\n      .firestore()\r\n      .collection('admin')\r\n      .doc('updates')\r\n      .onSnapshot(\r\n        (snap) => {\r\n          try {\r\n            // console.log('messages', snap.data());\r\n            this.updateMessages(snap.data()['announcements'], true);\r\n          } catch (error) {\r\n            this.updateMessages(['Fetch Failed'], false);\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log('Messages Error came', error);\r\n        },\r\n      );\r\n  }\r\n\r\n  getCookie = (cname) => {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  setCookie = (cname, cvalue) => {\r\n    document.cookie = cname + \"=\" + cvalue + \";path=/\";\r\n  }\r\n\r\n  updateMessages = (messagesArray, success) => {\r\n\r\n    const currentMessageArray = this.state.messagesArray;\r\n\r\n    if ((messagesArray.length - currentMessageArray.length) < 3) {\r\n\r\n      console.log(\"Show innovative update\");\r\n\r\n      let variant = 'success'\r\n      if (!success) {\r\n        variant = 'error';\r\n      }\r\n\r\n      this.props.enqueueSnackbar(messagesArray[messagesArray.length - 1], { variant: variant });\r\n    } else {\r\n      this.props.enqueueSnackbar('Welcome Guys ', { variant: \"info\" })\r\n    }\r\n\r\n    this.setState({\r\n      messagesArray: messagesArray,\r\n    });\r\n  }\r\n\r\n  themeToggler = () => {\r\n    let cTheme = this.state.cTheme;\r\n\r\n    document.getElementById('main-content').classList.remove(themesArray[cTheme]);\r\n    cTheme += 1\r\n\r\n    if (cTheme >= themesArray.length) {\r\n      cTheme = 0;\r\n    }\r\n\r\n    document.getElementById('main-content').classList.add(themesArray[cTheme]);\r\n\r\n    this.setState({\r\n      cTheme: cTheme\r\n    });\r\n\r\n    this.setCookie('themeData', cTheme);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // For getting themes Cookies\r\n    const cookie = this.getCookie('themeData');\r\n    console.log(\"Cookie found\", cookie);\r\n    if (cookie) {\r\n\r\n      document.getElementById('main-content').classList.add(themesArray[cookie]);\r\n\r\n      this.setState({\r\n        cTheme: parseInt(cookie)\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const messageEl = [];\r\n    const messagesArray = this.state.messagesArray;\r\n    for (let i = messagesArray.length - 1; i >= 0; i--) {\r\n      if (i === messagesArray.length - 1) {\r\n        messageEl.push(<li key={i} className=\"text-primary\">{messagesArray[i]}</li>);\r\n      } else {\r\n        messageEl.push(<li key={i}>{messagesArray[i]}</li>);\r\n      }\r\n    }\r\n\r\n    const elements = []\r\n\r\n    if (!messageEl.length) {\r\n      elements.push(\r\n        <div key={0} style={{ overflow: 'auto', padding: 0, height: '60vh', color: \"#7d7d7d\" }}>\r\n          <ReactLoading key={0} type={\"bubbles\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />\r\n        </div>\r\n      )\r\n    } else {\r\n      elements.push(\r\n        <ul key={0} style={{ overflow: 'auto', height: '60vh', color: \"#7d7d7d\" }}>\r\n          {messageEl}\r\n        </ul>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div style={{ position: \"sticky\", top: 0 }}>\r\n        <div className=\"jumbotron updates-table\" id=\"updates-container\" style={{ marginRight: \"-15px\" }}>\r\n          <h1 className=\"center\">Updates</h1>\r\n          {elements}\r\n        </div>\r\n\r\n        <div>\r\n          <Button onClick={this.themeToggler}>Toggle Theme</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withSnackbar(Messages);\r\n","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nexport default class QuizWaiting extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answers: {},\r\n      questions: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n\r\n    db.collection('questions')\r\n      .doc('answers')\r\n      .get()\r\n      .then((doc) => {\r\n        // console.log(doc.data());\r\n        this.setState({\r\n          answers: doc.data(),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log('Fetch correct answers failed!');\r\n      });\r\n\r\n    db.collection('questions')\r\n      .doc('questionSet')\r\n      .get()\r\n      .then((doc) => {\r\n        // console.log(doc.data());\r\n        this.setState({\r\n          questions: doc.data(),\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log('Fetch correct questions failed!');\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const correctAnswers = this.state.answers;\r\n    const questions = this.state.questions;\r\n\r\n    const answersComponent = [];\r\n    for (var key in questions) {\r\n      answersComponent.push(\r\n        <div key={key} className=\"answers-block jumbotron\">\r\n          <p style={{ whiteSpace: 'pre-line' , fontSize : \"18px\"}}>\r\n            {' '}\r\n            {key} : {questions[key]}{' '}\r\n          </p>\r\n          <h4 style={{ whiteSpace: 'pre-line' , borderStyle: \"dashed\" , borderRadius: \"10px\" , padding: \"15px\"}}>\r\n            {' '}\r\n            Answer {key} : {correctAnswers[key]}\r\n          </h4>\r\n        </div>,\r\n      );\r\n    }\r\n\r\n    return <div className=\"container\" style={{ marginTop: \"16px\" }}> {answersComponent}</div>;\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport ReactLoading from 'react-loading';\r\n\r\nexport default class PriorityResults extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scorecard: [],\r\n    };\r\n\r\n    this.unsubscribe = firebase.firestore()\r\n      .collection('unselectedTeams').onSnapshot((snap) => {\r\n\r\n        let tempDict = {};\r\n\r\n        snap.forEach((doc) => {\r\n          tempDict[doc.data()['teamName']] = doc.data()['money'];\r\n        });\r\n\r\n        // Sorting by key and creating an array\r\n        var items = Object.keys(tempDict).map(function (key) {\r\n          return [key, tempDict[key]];\r\n        });\r\n\r\n        // Sort the array based on the second element\r\n        items.sort(function (first, second) {\r\n          return second[1] - first[1];\r\n        });\r\n\r\n        this.setState({\r\n          scorecard: items,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  render() {\r\n    const scorecard = this.state.scorecard;\r\n    let tableToCreate = [];\r\n    var i = 0\r\n    for (let key in scorecard) {\r\n      i = i + 1\r\n\r\n      let color='text-success';\r\n      let diff = parseFloat(scorecard[key][1]).toFixed(2) - 3800000;\r\n      if (diff < 0) {\r\n        color = 'text-danger';\r\n      } else if (diff === 0) {\r\n        color = 'text-info';\r\n      }\r\n\r\n      tableToCreate.push(\r\n        <Fragment key={key}>\r\n          <tr className=\"table-info\" style={{ textAlign: 'center'}}>\r\n            <td>{i}</td>\r\n            <td>{scorecard[key][0]}</td>\r\n            <td>{parseFloat(scorecard[key][1]).toFixed(2)}</td>\r\n            <td class={color}>{diff}</td>\r\n          </tr>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    let elements = [];\r\n\r\n    if (!tableToCreate.length) {\r\n      elements = (\r\n        <div style={{ marginTop: \"32px\" }}>\r\n          <ReactLoading type={\"bars\"} style={{ margin: \"auto\", width: \"100px\" }} />\r\n        </div>\r\n      )\r\n    } else {\r\n      elements = (\r\n        <table\r\n          style={{\r\n            margin: 'auto',\r\n            width: '70%',\r\n            border: '1px solid black',\r\n            borderRadius: '5px!important',\r\n          }}\r\n        >\r\n          <thead className=\"thead-dark\">\r\n            <tr style={{ textAlign: 'center' }}>\r\n              <th>Rank</th>\r\n              <th>Team Name</th>\r\n              <th>Money</th>\r\n              <th>Net Profit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{tableToCreate}</tbody>\r\n        </table>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"table\" style={{ padding: '60px' }}>\r\n        <h1 style={{ textAlign: 'center' }}>IPO Leaderboard</h1>\r\n\r\n        {elements}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport PriorityResults from '../priorityResults';\r\n\r\nexport default class QuizResult extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scorecard: {},\r\n      teamNames: {\r\n        1: 'Team 1',\r\n        2: 'Team 2',\r\n        3: 'Team 3',\r\n        4: 'Team 4',\r\n        5: 'Team 5',\r\n        6: 'Team 6',\r\n        7: 'Team 7',\r\n        8: 'Team 8',\r\n      },\r\n      teamDetails: {},\r\n      predictionDict: {},\r\n      toShowSelected: false,\r\n    };\r\n\r\n    this.unsubscribe = '';\r\n  }\r\n\r\n  showQuiz = () => {\r\n    this.setState({\r\n      toShowSelected: true,\r\n    });\r\n  };\r\n\r\n  showIPO = () => {\r\n    this.setState({\r\n      toShowSelected: false,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n\r\n    this.unsubscribe = firebase.firestore().collection('scorecard').onSnapshot((snap) => {\r\n      let tempDict = {};\r\n      snap.forEach((doc) => {\r\n        tempDict[doc.id] = doc.data().total;\r\n      });\r\n      var items = Object.keys(tempDict).map(function (key) {\r\n        return [key, tempDict[key]];\r\n      });\r\n\r\n      // Sort the array based on the second element\r\n      items.sort(function (first, second) {\r\n        return second[1] - first[1];\r\n      });\r\n      this.setState({\r\n        scorecard: items,\r\n      });\r\n    });\r\n\r\n    db.collection('registeredTeams')\r\n      .get()\r\n      .then((doc) => {\r\n        let teamNames = {};\r\n        doc.forEach((row) => {\r\n          teamNames[row.id] = row.data()['teamName'];\r\n        });\r\n\r\n        this.setState({\r\n          teamNames: teamNames,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error in quiz Result', error);\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    try {\r\n      this.unsubscribe();\r\n    } catch (err) {\r\n      console.log(\"Just to prevent the problem\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.toShowSelected) {\r\n      const scorecard = this.state.scorecard;\r\n      const tableToCreate = [];\r\n      for (let i = 0; i < scorecard.length; i++) {\r\n        tableToCreate.push(\r\n          <Fragment key={i}>\r\n            <tr className=\"table-info\" style={{ textAlign: 'center' }}>\r\n              <td>{i + 1}</td>\r\n              <td>{this.state.teamNames[scorecard[i][0]]}</td>\r\n              <td>{scorecard[i][1]}</td>\r\n            </tr>\r\n          </Fragment>,\r\n        );\r\n      }\r\n\r\n      return (\r\n        <Fragment>\r\n          <div id=\"navbar\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col center\" onClick={this.showQuiz}>\r\n                {' '}\r\n                Quiz Results{' '}\r\n              </div>\r\n              <div className=\"col center text-info\" onClick={this.showIPO}>\r\n                {' '}\r\n                IPO Leaderboard{' '}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table\" style={{ padding: '60px' }}>\r\n            <h1 style={{ textAlign: 'center' }}>Quiz Results!</h1>\r\n            <table\r\n              style={{\r\n                margin: 'auto',\r\n                width: '70%',\r\n                border: '1px solid black',\r\n                borderRadius: '5px!important',\r\n              }}\r\n            >\r\n              <thead className=\"thead-dark\">\r\n                <tr style={{ textAlign: 'center' }}>\r\n                  <th>Rank</th>\r\n                  <th>Team Name</th>\r\n                  <th>Team Score</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{tableToCreate}</tbody>\r\n            </table>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n    } else {\r\n      return (\r\n        <Fragment>\r\n          <div id=\"navbar\" className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col center text-info\" onClick={this.showQuiz}>\r\n                {' '}\r\n                Quiz Results{' '}\r\n              </div>\r\n              <div className=\"col center\" onClick={this.showIPO}>\r\n                {' '}\r\n                IPO Leaderboard{' '}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <PriorityResults />\r\n        </Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Fragment } from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nimport LoginHandler from '../LoginHandler';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nclass Prestart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      message: \"\",\r\n      enter: false\r\n    }\r\n  }\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      message: \"\",\r\n      open: false\r\n    });\r\n  }\r\n\r\n  checkCode = (tCode) => {\r\n    // console.log('Team code got', tCode);\r\n\r\n    const db = firebase.firestore();\r\n    db.collection('answers').doc(tCode).get().then(\r\n      doc => {\r\n        if (doc.exists) {\r\n          // console.log(\"Success the code exists\");\r\n          this.setState({\r\n            message: \"The code is valid!\",\r\n            enter: true\r\n          });\r\n\r\n        } else {\r\n          this.setState({\r\n            open: true,\r\n            message: \"This code does not exist!\"\r\n          });\r\n        }\r\n      }\r\n    ).catch(error => {\r\n      console.log(\"error came\", error);\r\n      this.setState({\r\n        open: true\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    let introBtn = [\r\n      <h4 className=\"center\">Checkout the </h4>,\r\n      <div style={{ marginTop: \"32px\", display: \"flex\" }}>\r\n        <a href=\"/intro/\" style={{ margin: \"auto\" }} className=\"btn btn-info\">Intro Page</a>\r\n      </div>\r\n\r\n    ];\r\n\r\n    if (this.state.enter) {\r\n\r\n      return (\r\n        <Fragment>\r\n\r\n          <div className=\"jumbotron container\" style={{ marginTop: \"10vh\" }}>\r\n\r\n            <h2 className=\"center\">Great ! Your secret Code is working well.</h2>\r\n            <h4 className=\"center\">Please wait till the quiz round starts. In the meantime, read the rules for the quiz round.</h4>\r\n            <div style={{\r\n              margin: \"auto\",\r\n              padding: \"10px\"\r\n            }}\r\n            >\r\n              <ul>\r\n                <li><code>Total Questions :</code> 12</li>\r\n                <li><code>Total time :</code> 30 minutes</li>\r\n                <li><code>Total marks :</code> 50</li>\r\n                <li>Different questions may have different marks associated with them.</li>\r\n                <li>Some questions may have <code>partial marking</code></li>\r\n                <li>Marking scheme of questions is NOT shared</li>\r\n                <li>For questions with multiple answers, please write the answers in proper sequence</li>\r\n                <li>Reminders will be sent after <code>15, 25 and 29 minutes</code>. Make sure that you have submitted all your answers by clicking the submit button. No requests to extra time after the 30 minutes will be entertained.</li>\r\n                <li>Rules for Tiebreaker</li>\r\n                <blockquote style={{ marginLeft: \"22px\" }}>\r\n\r\n                  <li><strong>Backward marking</strong> - In case of equal scores, questions will be checked from the last. In first case of difference, the answer with lesser marks loses.</li>\r\n                  <li><strong>Special Tiebreaker round</strong> - If a tie still persists, the teams will be invited to a separate google meet for a special tie breaker question.</li>\r\n\r\n                </blockquote>\r\n              </ul>\r\n\r\n            </div>\r\n          </div>\r\n          {introBtn}\r\n        </Fragment >\r\n      )\r\n    } else {\r\n\r\n      return (\r\n        <Fragment>\r\n          <h1 className=\"center\" style={{ margin: \"32px\" }}>The game will start soon!</h1>\r\n          <LoginHandler submitHandler={this.checkCode} />\r\n\r\n          {introBtn}\r\n\r\n          {/* dialog for telling about */}\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleDialogClose}\r\n            aria-labelledby=\"Login Failed\"\r\n            aria-describedby=\"Fail dialog\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {this.state.message}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                close\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default Prestart;\r\n","import React, { Fragment } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport ReactLoading from 'react-loading';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Home from './components/pages/home';\r\nimport Player from './components/pages/players';\r\nimport Teams from './components/pages/teams';\r\nimport Quiz from './components/quiz';\r\nimport Messages from './components/messages';\r\nimport QuizWaiting from './components/QuizWaiting';\r\nimport QuizResult from './components/pages/QuizResult';\r\nimport Prestart from './components/pages/prestart';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    // setting the inital state of the App\r\n    this.state = {\r\n      tabValue: 0,\r\n      round: '...',\r\n      messages: [],\r\n    };\r\n\r\n    // Don't forget to bind the functions to classes\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  /* ----- Add functions here ----- */\r\n  updateRound(round, lastSold) {\r\n\r\n    // round is integer or string or say between 1 to 60\r\n    try {\r\n      if (round <= 60 && round >= 1) {\r\n        // console.log(\"Round\", round);\r\n        // console.log(lastSold);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Not a number\");\r\n    }\r\n\r\n    this.setState({\r\n      round: round,\r\n    });\r\n  }\r\n\r\n  handleChange(event, newValue) {\r\n    this.setState({\r\n      tabValue: newValue,\r\n    });\r\n    // console.log('Handle Change', newValue);\r\n  }\r\n\r\n  /* ----- Add Firebase details here ------ */\r\n  // Add firebase updates and listener here\r\n  componentDidMount() {\r\n    const db = firebase.firestore();\r\n    const doc = db.collection('admin').doc('current');\r\n\r\n    doc.onSnapshot(\r\n      (snap) => {\r\n        try {\r\n          // console.log('Recieved Round Info', snap.data().pid);\r\n            this.updateRound(snap.data().pid, snap.data().lastSold);\r\n        } catch (error) {\r\n          console.log('Main fetch failed', error);\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(`Encountered error: ${err}`);\r\n      },\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // First check for the Quiz Round from the firebase\r\n    const r = this.state.round;\r\n\r\n    let round = '...';\r\n    if (r === 'quiz123') {\r\n      round = 'quiz'\r\n    } else if (r === 'wait546') {\r\n      round = 'waiting'\r\n    } else if (r === 'disp457') {\r\n      round = 'display'\r\n    } else if (r === 'prestart321') {\r\n      round = 'prestart'\r\n    } else if (r === 'prediction') {\r\n      round = 'prediction'\r\n    }\r\n    else {\r\n      // if ( (r !== 'quiz') && (r !== 'waiting') && (r !== 'prestart')) {\r\n      //   round = r;\r\n      // } else if {\r\n        \r\n      // }\r\n\r\n      if (parseInt(r) >=1 && parseInt(r) <=60) {\r\n        round = r;\r\n      }\r\n    }\r\n\r\n    // console.log(\"Round\", round);\r\n    // console.log(\"R\", r);\r\n\r\n    // Check for the quiz round!\r\n    if (round === '...') {\r\n      return (\r\n        <Fragment>\r\n          <div style={{ display: \"flex\" }}>\r\n            <div style={{ margin: \"40vh auto\", width: \"100px\" }}>\r\n              <ReactLoading style={{ margin: \"auto\" }} type=\"spinningBubbles\" color=\"#000000\" height={'20%'} width={'20%'} />\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )\r\n    } else if (round === 'prestart') {\r\n      return (\r\n        <div id=\"main-content\" className=\"container-fluid\">\r\n          <Prestart />\r\n        </div>\r\n      )\r\n    }\r\n    else if (round === 'quiz') {\r\n      return (\r\n        <div id=\"main-content\" className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-9\">\r\n              <Quiz />\r\n            </div>\r\n            <div className=\"col-sm-3\">\r\n              <Messages />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (round === 'waiting') {\r\n      return (\r\n        <Router>\r\n          <AppBar position=\"static\" color=\"transparent\" id=\"nav-bar\">\r\n            <Tabs\r\n              variant=\"fullWidth\"\r\n              aria-label=\"Navigation\"\r\n              value={this.state.tabValue}\r\n              onChange={this.handleChange}\r\n            >\r\n              <Tab label=\"Answers\" to=\"/\" component={Link} />\r\n              <Tab label=\"Players\" to=\"/players\" component={Link} />\r\n            </Tabs>\r\n          </AppBar>\r\n\r\n          <div id=\"main-content\">\r\n            <Switch>\r\n              <Route path=\"/players\">\r\n                <Player />\r\n              </Route>\r\n\r\n              <Route path=\"/\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-9\">\r\n                      <QuizWaiting />\r\n                    </div>\r\n                    <div className=\"col-sm-3\">\r\n                      <Messages />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      );\r\n    } else if (round === 'display') {\r\n      return (\r\n        <Router>\r\n          <AppBar position=\"static\" color=\"transparent\" id=\"nav-bar\">\r\n            <Tabs\r\n              variant=\"fullWidth\"\r\n              aria-label=\"Navigation\"\r\n              value={this.state.tabValue}\r\n              onChange={this.handleChange}\r\n            >\r\n              <Tab label=\"Players\" to=\"/players\" component={Link} />\r\n              <Tab label=\"Teams\" to=\"/teams\" component={Link} />\r\n              <Tab label=\"LeaderBoard\" to=\"/leaderboard\" component={Link}></Tab>\r\n            </Tabs>\r\n          </AppBar>\r\n\r\n          <div id=\"main-content\">\r\n            <Switch>\r\n              <Route path=\"/teams\">\r\n                <Teams />\r\n              </Route>\r\n              <Route path=\"/leaderboard\">\r\n                <QuizResult />\r\n              </Route>\r\n\r\n              <Route path=\"/players\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-9\">\r\n                      <Player />\r\n                    </div>\r\n                    <div className=\"col-sm-3\">\r\n                      <Messages />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      );\r\n    } else {\r\n      // The main content and routes everything\r\n      return (\r\n        <Router>\r\n          <AppBar position=\"static\" color=\"transparent\" id=\"nav-bar\">\r\n            <Tabs\r\n              variant=\"fullWidth\"\r\n              aria-label=\"Navigation\"\r\n              value={this.state.tabValue}\r\n              onChange={this.handleChange}\r\n            >\r\n              <Tab label=\"Home\" to=\"/\" component={Link} />\r\n              <Tab label=\"Players\" to=\"/players\" component={Link} />\r\n              <Tab label=\"Teams\" to=\"/teams\" component={Link} />\r\n              <Tab label=\"LeaderBoard\" to=\"/leaderboard\" component={Link}></Tab>\r\n            </Tabs>\r\n          </AppBar>\r\n\r\n          <div id=\"main-content\">\r\n            <Switch>\r\n              <Route path=\"/players\">\r\n                <Player />\r\n              </Route>\r\n              <Route path=\"/teams\">\r\n                <Teams round={this.state.round} />\r\n              </Route>\r\n              <Route path=\"/leaderboard\">\r\n                <QuizResult />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-sm-9\">\r\n                      <Home round={round} />\r\n                    </div>\r\n                    <div className=\"col-sm-3\">\r\n                      <Messages />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      );\r\n    }\r\n  } // End of render\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyAy8oi_BHmxutKBvJ2oQLaU41RB1m0qElc',\r\n  authDomain: 'iit-auction.firebaseapp.com',\r\n  databaseURL: 'https://iit-auction.firebaseio.com',\r\n  projectId: 'iit-auction',\r\n  storageBucket: 'iit-auction.appspot.com',\r\n  messagingSenderId: '1009078682293',\r\n  appId: '1:1009078682293:web:caafd6e69e15e62d29f4fc',\r\n  measurementId: 'G-H7K3QDLHPQ',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <SnackbarProvider maxSnack={3}>\r\n    <App />\r\n  </SnackbarProvider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}