{"version":3,"sources":["components/card.js","components/LoginHandler.js","components/priority.js","components/predict.js","components/SimplePlayerCard.js","components/Stats.js","components/pages/home.js","components/pages/players.js","components/teamCard.js","components/unselectedTeams.js","components/pages/teams.js","components/quiz.js","components/messages.js","components/QuizWaiting.js","components/priorityResults.js","components/pages/QuizResult.js","components/pages/prestart.js","App.js","serviceWorker.js","index.js"],"names":["MyCard","img","this","props","name","color","text","status","className","style","height","src","alt","display","flexDirection","marginTop","type","margin","onClick","handler","React","Component","LoginHandler","state","inputValue","handleFormSubmit","bind","handleInputChange","event","preventDefault","submitHandler","trim","value","target","test","alert","setState","onSubmit","onChange","placeholder","required","allowedCount","Priority","handleDialogClose","open","addPriority","i","priorityList","curCategory","bidprice","curCount","includes","indexx","indexOf","splice","j","length","push","submitPriorities","console","log","loginId","db","firebase","firestore","intArr","parseInt","collection","doc","set","priorityArray","bidPriceDict","firebaseListener","pno","onSnapshot","snap","tempArr","data","strArray","error","currentPriority","priorityListElements","map","key","players","priorityComponent","elementArr","submitButton","marginLeft","marginBlock","disabled","overflowY","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Predict","handleDialogOpen","dialogName","handlePlayerConfirm","predictionArray","predictionArrayDict","confirmNumber","loginFail","loginFailHeading","loginFailDesc","toShowPriority","isLoading","handleFailDialogClose","loginSubmitHandler","val","get","then","exists","predictionData","err","doc2","catch","number","loginMessageDialog","DialogActions","Button","autoFocus","items","addPrediction","padding","toShowLoginHandler","width","useStyles","makeStyles","title","fontSize","pos","marginBottom","SimplePlayerCard","classes","imgSrc","highQuality","colToUse","colSize","fullHeight","fixedHeight","priceSection","bought","price","sold","bidPrice","toShowBidPrice","Card","CardContent","Typography","gutterBottom","variant","component","adjective","Stats","pdata","playerdata","playerNo","heading","Object","entries","year","fontWeight","field","value1","Body","tempList","ob","MiddleBlock","currentMain","current","teams","cardsElementList","moneyLeft","predictedByList","forEach","index","isPredictionLoading","ipoList","prioritiesDict","toFixed","isPrioritiesLoading","round","LeftTabs","teamName","background","ListItem","button","borderRadius","ListItemText","primary","Home","1","2","3","4","5","6","7","8","teamCodes","teamNames","predictionDict","empty_dict","teamNamesDict","teamCodesDict","predictedTeams","moneyLeftDict","tempDict","leftBar","updateCurrrentMain","List","position","top","Player","toOpen","soldDict","currentClick","unsubscribe","array","textAlign","playerNames","TeamCard","teamMember","teamMemberComponent","predictionComponent","shares","boughtSharesComponent","player","playerName","priority","prediction_arr","class","teamLeader","UnselectedTeams","teamDetails","unSelectedTeams","priorityDict","sharesDict","teamMembers","teamLeaders","allTeamsComponent","teamCode","Teams","showSelected","toShowSelected","showUnselected","unTeamDetails","Dict","unsubscribeForUnselected","teamOwners","percentShare","Math","floor","Quiz","userID","currentQuestionNumber","currentQuestion","answer","questions","maxMarksPerQuestion","answerDict","9","10","11","12","updateQuestion","handleAnswerInput","handleSubmit","Qno","merge","newQno","answersRef","docSnapshot","marksOfThisQuestion","whiteSpace","Input","colorType","questionTab","themesArray","Messages","getCookie","cname","ca","decodeURIComponent","document","cookie","split","c","charAt","substring","setCookie","cvalue","updateMessages","messagesArray","success","currentMessageArray","enqueueSnackbar","themeToggler","cTheme","getElementById","classList","remove","add","messageEl","elements","overflow","marginRight","withSnackbar","QuizWaiting","answers","correctAnswers","answersComponent","PriorityResults","scorecard","keys","sort","first","second","tableToCreate","parseFloat","border","QuizResult","showQuiz","showIPO","total","row","Prestart","message","checkCode","tCode","enter","App","tabValue","messages","handleChange","lastSold","newValue","r","AppBar","Tabs","aria-label","Tab","label","to","Link","path","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","maxSnack","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d219bc13.chunk.js","sourcesContent":["import React from 'react';\n\nclass MyCard extends React.Component {\n  render() {\n    const img = 'cpng/' + this.props.img + '.jpg';\n    const name = this.props.name;\n\n    const status = this.props.status;\n    var color = 'btn-primary';\n    var text = 'Select';\n    if (status) {\n      color = 'btn-outline-danger';\n      text = 'Unselect';\n    }\n\n    return (\n      <div className=\"col-sm-4 col-md-3 col-lg-2\">\n        <div className=\"card gallery-item\" style={{ height: \"92%\" }}>\n          <img className=\"card-img-top\" src={img} alt={name} />\n          <div className=\"card-body\" style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <h5 className=\"card-title\">{name}</h5>\n            <p style={{ marginTop: 'auto' }}>{this.props.type}</p>\n            <button style={{ margin: \"auto auto 8px auto\" }} onClick={this.props.handler} className={`btn ${color}`}>\n              {' '}\n              {text}{' '}\n            </button>\n\n            {/* add on click to this button  */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyCard;\n","import React from 'react';\n\nclass LoginHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n    };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleFormSubmit(event) {\n    event.preventDefault();\n    // console.log('From submit called');\n    // console.log('Value', this.state.inputValue);\n\n    if (typeof this.props.submitHandler === 'function') {\n      this.props.submitHandler(this.state.inputValue.trim());\n    }\n  }\n\n\n  handleInputChange(event) {\n    // console.log(event.target.value);\n\n    let value = event.target.value;\n\n    var format = /[!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>/?]+/;\n    if(format.test(value)){\n      alert('No special characters are allowed!');\n    } else {\n      this.setState({\n        inputValue: value,\n      });\n    }\n    \n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <form onSubmit={this.handleFormSubmit} className=\"from\">\n            <div className=\"form-group\">\n              <input\n                value={this.state.inputValue}\n                onChange={this.handleInputChange}\n                className=\"form-control\"\n                placeholder=\"Enter yor secret Id\"\n                required\n              />\n            </div>\n            <div style={{ display: \"flex\" }}>\n              <button className=\"btn btn-info btn-lg\" style={{ margin: \"auto\" }} type=\"submit\">Submit</button>\n            </div>\n\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginHandler;\n","import React, { Fragment } from 'react';\n\nimport bidprice from '../data/bidprice.json';\nimport MyCard from './card';\nimport players from '../data/players.json';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst allowedCount = { '1,00,000': 2, '3,00,000': 3, '5,00,000': 2 };\n\nclass Priority extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Order is mandatory in priority List\n    this.state = {\n      priorityList: [],\n      bidPriceDict: {\n        '5,00,000': [],\n        '3,00,000': [],\n        '1,00,000': [],\n      },\n      open: false,\n    };\n\n    this.firebaseListener = '';\n\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      open: false,\n    });\n  };\n\n  addPriority = (i) => {\n    //console.log(\"Add this to priorty\", i);\n\n    const priorityList = this.state.priorityList;\n    const curCategory = bidprice[i];\n    let curCount = 1;\n\n    if (priorityList.includes(i)) {\n      //This is for removing player from priority list\n      const indexx = priorityList.indexOf(i);\n      priorityList.splice(indexx, 1);\n    } else {\n      // This is for adding player to priority list\n      for (var j = 0; j < priorityList.length; j++) {\n        if (bidprice[priorityList[j]] === curCategory) curCount += 1;\n      }\n      if (curCount > allowedCount[curCategory]) {\n        alert(\n          'You have already selected ' +\n            allowedCount[curCategory] +\n            ' players of this category',\n        );\n      } else {\n        priorityList.push(i);\n      }\n    }\n    //console.log(priorityList , curCategory , curCount)\n\n    this.setState({\n      priorityList: priorityList,\n    });\n  };\n\n  submitPriorities = () => {\n    console.log('Submititing priorites to', this.props.loginId);\n    const db = firebase.firestore();\n\n    const priorityList = this.state.priorityList;\n\n    let intArr = [];\n    for (let i = 0; i < priorityList.length; i++) {\n      intArr.push(parseInt(priorityList[i]));\n    }\n\n    db.collection('priority').doc(this.props.loginId).set({\n      priorityArray: intArr,\n    });\n\n    this.setState({\n      open: true,\n    });\n  };\n\n  componentDidMount() {\n    // First create the dictionary\n    let bidPriceDict = {};\n    for (var pno in bidprice) {\n      if (bidPriceDict[bidprice[pno]]) {\n        bidPriceDict[bidprice[pno]].push(pno);\n      } else {\n        bidPriceDict[bidprice[pno]] = [pno];\n      }\n    }\n\n    // Added realtime updated\n    this.firebaseListener = firebase.firestore().collection('priority')\n      .doc(this.props.loginId)\n      .onSnapshot(\n        (snap) => {\n          const tempArr = snap.data()['priorityArray'];\n\n          // Converting it to string\n          var strArray = [];\n          for (let i = 0; i < tempArr.length; i++) {\n            strArray.push(tempArr[i] + '');\n          }\n\n          this.setState({\n            priorityList: strArray,\n          });\n        },\n        (error) => {\n          console.log('Fetch failed in priority fetch');\n        },\n      );\n\n    // Here we store the bidPricedict for further uses\n    this.setState({\n      bidPriceDict: bidPriceDict,\n    });\n  }\n\n  componentWillUnmount() {\n    try {\n      this.firebaseListener();\n    } catch(error) {\n      console.log(\"Ignore Error in priority\");\n    }\n  }\n\n  render() {\n    const priorityList = this.state.priorityList;\n    const currentPriority = priorityList.length + 1;\n    const bidPriceDict = this.state.bidPriceDict;\n\n    const priorityListElements = priorityList.map((i) => (\n      <MyCard\n        key={i}\n        img={i}\n        name={players[i]}\n        type=\"Bowler\"\n        status={this.state.priorityList.includes(i)}\n        handler={() => this.addPriority(i)}\n      />\n    ));\n    // console.log('priority list elements ', priorityListElements.length);\n    const priorityComponent = [];\n\n    let i = 1;\n    for (var key in bidPriceDict) {\n      const playerArray = bidPriceDict[key];\n\n      const elementArr = playerArray.map((i) => (\n        <MyCard\n          key={i}\n          img={i}\n          name={players[i]}\n          type=\"Bowler\"\n          status={this.state.priorityList.includes(i)}\n          handler={() => this.addPriority(i)}\n        />\n      ));\n\n      priorityComponent.push(\n        <h3 key={i} >\n          Category {i} (Maximum {allowedCount[key]} players)\n        </h3>,\n        <div className=\"row\" key={'st'+i}>{elementArr}</div>,\n      );\n\n      i++;\n    }\n\n    let submitButton = (\n      <button className=\"btn btn-info\" style={{ marginLeft: 'auto', marginTop: \"6px\", marginBlock: \"6px\" }} disabled>\n        Submit\n      </button>\n    );\n    if (priorityList.length >= 7) {\n      submitButton = (\n        <button\n          className=\"btn btn-success\"\n          onClick={this.submitPriorities}\n          style={{ marginLeft: 'auto', marginTop: \"6px\", marginBlock: \"6px\" }}\n        >\n          Submit\n        </button>\n      );\n    }\n\n    return (\n      <Fragment>\n        <div className = \"center\">\n        <h1>IPO Round List Selections</h1>\n        </div>\n        <div style={{ display: 'flex' }}>\n          <h2>Choose your Priority {currentPriority}</h2>\n          {submitButton}\n        </div>\n\n        <div\n          className=\"container-fluid\"\n          style={{ height: '80vh', overflowY: 'auto' }}\n        >\n          {priorityComponent}\n        </div>\n\n        <h3 style={{ marginTop: \"32px\" }}> Your priority list </h3>\n        <div className=\"row\">{priorityListElements}</div>\n\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleDialogClose}\n          aria-labelledby=\"Login Failed\"\n          aria-describedby=\"Fail dialog\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">Submitted</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              You choices have been updated, you can still make changes\n            </DialogContentText>\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default Priority;\n","import React from 'react';\nimport MyCard from './card';\nimport LoginHandler from './LoginHandler';\n\nimport Priority from './priority';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReactLoading from 'react-loading';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport players from '../data/players.json';\n\nclass Predict extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // TO change loginId and toShowPriority\n    this.state = {\n      predictionArray: [],\n      open: false,\n      dialogName: 'Confirm',\n      confirmNumber: 0,\n      loginId: '',\n      loginFail: false,\n      loginFailHeading: 'Login Unsuccessful',\n      loginFailDesc: 'Please check you secret Id and try again!',\n      toShowPriority: false,\n      isLoading: false\n    };\n\n    this.handleFailDialogClose = this.handleFailDialogClose.bind(this);\n    this.loginSubmitHandler = this.loginSubmitHandler.bind(this);\n    this.handleDialogOpen = this.handleDialogOpen.bind(this);\n\n    this.firebaseListener = '';\n  }\n\n  loginSubmitHandler(val) {\n    console.log('Login In prediction submit function', val);\n\n    this.setState({\n      isLoading: true\n    });\n\n    const db = firebase.firestore();\n    db.collection('predictions')\n      .doc(val)\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          // login successful\n          this.setState({\n            loginId: val,\n            isLoading: false\n          });\n\n          this.firebaseListener = firebase.firestore().collection('predictions')\n            .doc(this.state.loginId)\n            .onSnapshot(\n              (snap) => {\n                const predictionData = snap.data()['predictionArray'];\n                console.log('Prediction data', predictionData);\n\n                this.setState({\n                  predictionArray: predictionData,\n                });\n              },\n              (err) => { },\n            );\n        } else {\n          // This means he is not in predictions, let's also check for\n\n          firebase.firestore().collection('priority')\n            .doc(val)\n            .get()\n            .then((doc2) => {\n              if (doc2.exists) {\n                this.setState({\n                  toShowPriority: true,\n                  loginId: val,\n                  isLoading: false\n                });\n              } else {\n                // No such players exists!\n                this.setState({\n                  loginFail: true,\n                  isLoading: false\n                });\n              }\n            })\n            .catch((error) => {\n              alert('Network Error');\n              this.setState({\n                isLoading: false\n              })\n            });\n        } // Enf of first predictions else\n      })\n      .catch((error) => {\n        alert('Network error');\n        console.log(\"Errror came\", error);\n        this.setState({\n          isLoading: false\n        });\n      });\n  }\n\n  /* This function just closes the dialog */\n  handleDialogClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleFailDialogClose() {\n    this.setState({\n      loginFail: false,\n    });\n  }\n\n  /* This function handles the confirm prediciton dialog */\n  handleDialogOpen = () => {\n    console.log('Handle submit');\n    this.setState({\n      dialogName: \"You're about to submit\",\n      open: true,\n    });\n  };\n\n  /* Finall add on yes button pressed */\n  handlePlayerConfirm = () => {\n    const predictionArray = this.state.predictionArray;\n\n    var predictionArrayDict = {};\n    predictionArrayDict['predictionArray'] = predictionArray;\n\n    // Update the firebase with this data\n    // The prediction array will be automatically updated due to firesbase snapshot\n\n    firebase\n      .firestore()\n      .collection('predictions')\n      .doc(this.state.loginId)\n      .set(predictionArrayDict);\n\n    // Finally update the current state of this class\n    this.setState({\n      open: false,\n    });\n  };\n\n  addPrediction(number) {\n    console.log('Add Prediction called');\n    console.log(number);\n    const predictionArray = this.state.predictionArray;\n\n    // Already exists or not\n    if (!this.state.predictionArray.includes(number)) {\n      // this.handleDialogOpen(players[0], number);\n\n      // Check if 7 are done, show the warning that he has chose all 7 and he has to unpredict one\n      if (this.state.predictionArray.length >= 7) {\n        // Limit of 7 exceeded\n        // Using the same login fail warning dialog\n        this.setState({\n          loginFail: true,\n          loginFailHeading: 'Limit Exceed 7 Players!',\n          loginFailDesc: 'Please unpredict one or more to predict this one',\n        });\n      } else {\n        // Proceed as limit not exceeded yet\n        predictionArray.push(number);\n\n        this.setState({\n          predictionArray: predictionArray,\n        });\n      }\n    } else {\n      //unpredict part of button\n      const indexx = predictionArray.indexOf(number);\n      predictionArray.splice(indexx, 1);\n      console.log(indexx);\n\n      this.setState({\n        predictionArray: predictionArray,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    try {\n      this.firebaseListener();\n    } catch(error) {\n      console.log(\"Ignore Error in predict\");\n    }\n  }\n\n  render() {\n    // Messages Dialog\n    const loginMessageDialog = (\n      <Dialog\n        open={this.state.loginFail}\n        onClose={this.handleFailDialogClose}\n        aria-labelledby=\"Login Failed\"\n        aria-describedby=\"Fail dialog\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {this.state.loginFailHeading}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {this.state.loginFailDesc}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={this.handleFailDialogClose}\n            color=\"primary\"\n            autoFocus\n          >\n            close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n\n    // First check if loggined\n    if (this.state.loginId) {\n      // document.getElementById('submitBtn').disabled = false -----> write this in reachJS :p\n\n      if (this.state.toShowPriority) {\n        return <Priority loginId={this.state.loginId} />;\n      } else {\n        // This is for predictions\n        const items = [];\n        for (let i = 1; i <= 60; i++) {\n          var status = this.state.predictionArray.includes(i);\n          items.push(\n            <MyCard\n              key={i}\n              img={i}\n              name={players[i]}\n              status={status}\n              type=\"Bowler\"\n              handler={() => this.addPrediction(i)}\n            />,\n          );\n        }\n\n        var submitButton = <Button disabled>Submit</Button>;\n\n        if (this.state.predictionArray.length >= 7) {\n          submitButton = (\n            <button onClick={this.handleDialogOpen} className=\"btn btn-success\">\n              Submit\n            </button>\n          );\n        }\n\n        return (\n          <div id=\"prediction-gallery\">\n            <div className=\"container\">\n              <h2 className=\"center\">Make your predictions</h2>\n              <div style={{ display: 'flex' }}>\n                {submitButton}\n                <div style={{ padding: '6px' }}>\n                  This button will be enabled once you predict all 7 players. :)\n                </div>\n              </div>\n              <div id=\"prediction-gallery-row\" className=\"row\">\n                {items}\n              </div>\n            </div>\n\n            <Dialog\n              open={this.state.open}\n              onClose={this.handleDialogClose}\n              aria-labelledby=\"Login Failed\"\n              aria-describedby=\"Fail dialog\"\n            >\n              <DialogTitle id=\"alert-dialog-title\">\n                {this.state.dialogName}\n              </DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                  Are you sure you want to go ahead with this? <strong> You can still make changes!</strong>\n\n                </DialogContentText>\n              </DialogContent>\n              <DialogActions>\n                <Button onClick={this.handleDialogClose} color=\"primary\">\n                  No\n                </Button>\n                <Button\n                  onClick={this.handlePlayerConfirm}\n                  color=\"primary\"\n                  autoFocus\n                >\n                  Yes\n                </Button>\n              </DialogActions>\n            </Dialog>\n\n            {/* Using this message dialog for other works also */}\n            {loginMessageDialog}\n          </div>\n        );\n      }\n    } // End of login if\n    else {\n\n      let toShowLoginHandler = '';\n\n      const isLoading = this.state.isLoading;\n      if (!isLoading) {\n        toShowLoginHandler = <LoginHandler submitHandler={this.loginSubmitHandler} />;\n      } else {\n        // The request has been made\n        toShowLoginHandler = <ReactLoading key={0} type={\"cylon\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\n      }\n\n      return (\n        <div id=\"prediction-login\">\n          <h1 className=\"center\" style={{ margin: '12px' }}>\n            Prediction/IPO Round Login\n          </h1>\n\n          {toShowLoginHandler}\n\n          {loginMessageDialog}\n        </div>\n      );\n    }\n  } // End of render\n}\n\nexport default Predict;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport players from '../data/players.json';\nimport adjective from '../data/adjective.json';\nimport bidprice from '../data/bidprice.json';\n\nconst useStyles = makeStyles({\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimplePlayerCard(props) {\n  const classes = useStyles();\n\n  /**\n   * value\n   * highQuality\n   * colSize\n   * price\n   * sold\n   * toShowBidPrice\n   */\n\n  let imgSrc = 'cpng/' + props.value + '.jpg';\n  if (props.highQuality) {\n    imgSrc = 'images/png/' + props.value + '.png';\n  }\n\n  let colToUse = 4; // Numric value\n  if (props.colSize) {\n    colToUse = props.colSize;\n  }\n\n  let fullHeight = 'simple-player-card height-in-percent';\n  if (props.fixedHeight) {\n    fullHeight = 'simple-player-card';\n  }\n\n  var priceSection = '';\n  var bought = 'col-sm-' + colToUse + ' not-sold-player';\n  if (props.price) {\n    priceSection = <p>Sold Rs. {props.price}</p>;\n    if (props.sold) {\n      bought = 'col-sm-' + colToUse + ' sold-player';\n    }\n  }\n\n  let bidPrice = '';\n  if (props.toShowBidPrice) {\n    bidPrice = <p>Starting Bid Rs. {bidprice[props.value]}</p>;\n  }\n\n  return (\n    <div className={bought} onClick={props.handler}>\n      <Card className={fullHeight}>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            <img className=\"gallery-item\" src={imgSrc} alt=\"Player\"></img>\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            {players[props.value]}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {adjective[props.value]}\n          </Typography>\n          {bidPrice}\n          {priceSection}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\nimport playerdata from '../data/playerData.json';\n\nexport default function Stats(props) {\n  //Props receive playerno props.playerNo\n  var pdata = playerdata[props.playerNo];\n  const heading = [];\n  const data = {};\n  try {\n    for (const [year, value] of Object.entries(pdata)) {\n      // use key and value\n      heading.push(<td key={year} style={{ fontWeight: 'bold' }}>{year}</td>);\n      for (const [field, value1] of Object.entries(value)) {\n        if (data[field]) {\n          data[field].push(value1);\n        } else {\n          data[field] = [value1];\n        }\n      }\n    }\n  } catch (error) {\n    console.log('stats.js mein sed lyf 3');\n  }\n\n  const Body = [];\n  for (var field in data) {\n    const tempList = [];\n    tempList.push(<td key={0} style={{ fontWeight: 'bold' }}>{field}</td>);\n\n    let j = 1;\n    for (var ob in data[field]) {\n      tempList.push(<td key={j}>{data[field][ob]}</td>);\n      j++;\n    }\n    Body.push(<tr key={field} >{tempList}</tr>);\n  }\n\n  // console.log('playerdata: ', data);\n\n  return (\n    <div\n      id=\"player-stats\"\n      className=\"jumbotron\"\n      style={{ margin: '22px', padding: '10px' }}\n    >\n      <table className=\"table table-borderless\">\n        <thead>\n          <tr>\n            <td></td>\n\n            {heading}\n          </tr>\n        </thead>\n\n        <tbody>{Body}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\n// import * as firebase from 'firebase';\nimport Predict from '../predict';\nimport '../../css/home.css';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SimplePlayerCard from '../SimplePlayerCard';\nimport Stats from '../Stats';\nimport ReactLoading from 'react-loading';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nfunction MiddleBlock(props) {\n  if (props.currentMain) {\n    // Team 1 to 8\n\n    // This current has been changed to dictionary\n    var current = props.teams[props.currentMain];\n\n    var cardsElementList = [];\n    // current.map((element, index) => {\n    //   console.log(element);\n    //   cardsElementList.push(<SimplePlayerCard value={element} />);\n    //   return false;\n    // });\n\n    for (var key in current) {\n      // console.log('Creating middle block', key, current[key]);\n      cardsElementList.push(\n        <SimplePlayerCard key={key} value={key} price={current[key]} />,\n      );\n    }\n\n    return (\n      <Fragment>\n        <h5 className=\"center\" style={{ margin: '12px' }}>\n          Money left with this team : {props.moneyLeft}{' '}\n        </h5>\n        <div className=\"row\">{cardsElementList}</div>\n      </Fragment>\n    );\n  } else {\n    // Above Auction One\n\n    if (props.currentMain === 'unsold') {\n      return 'UNSOLD ONE';\n    } else {\n      // This is the curretn Auction status\n      // return `Current Auction going for ${props.round} `;\n\n      let predictedByList = [];\n      try {\n        props.predictedByList.forEach((data, index) => {\n          predictedByList.push(<li key={index} style={{ marginLeft: '24px' }}>{data}</li>);\n        });\n      } catch (err) {\n        // Here error will come when it is prediccted by none\n        // i.e predictedByList is empty\n        predictedByList.push(<p key={0} className=\"center\"> No Team</p>);\n      }\n\n      if (props.isPredictionLoading) {\n        predictedByList = <ReactLoading key={0} type={\"balls\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\n      }\n\n      let ipoList = [];\n      let prioritiesDict = props.prioritiesDict;\n      try {\n        for (var pno in prioritiesDict) {\n          ipoList.push(<li key={pno} style={{ marginLeft: '24px' }}>{prioritiesDict[pno]} - {(100 / prioritiesDict.length).toFixed(2)} %</li>)\n        }\n\n        if (!prioritiesDict.length) {\n          ipoList.push(<p key={0} className=\"center\"> No Team</p>);\n        }\n\n      } catch (err) {\n        // Here error will come when it is prediccted by none\n        // i.e predictedByList is empty\n        ipoList.push(<p key={0} className=\"center\"> No Team</p>);\n      }\n\n      if (props.isPrioritiesLoading) {\n        ipoList = <ReactLoading key={0} type={\"balls\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\n      }\n\n      return (\n        <div className=\"row\">\n          <div className=\"col-sm-3 col-md-5\">\n            <SimplePlayerCard\n              colSize=\"12\"\n              highQuality={true}\n              value={props.round}\n              toShowBidPrice={true}\n              fixedHeight={true}\n            />\n\n            <div\n              id=\"priority-by-list\"\n              className=\"jumbotron\"\n              style={{ margin: '12px', padding: \"20px 32px\" }}\n            >\n              <h3 className=\"center\" style={{ color: \"#424242\" }}>IPO shares</h3>\n\n              {ipoList}\n            </div>\n\n          </div>\n          <div className=\"col-sm-9 col-md-7\">\n            <Stats key={props.round} playerNo={props.round} />\n\n            <div\n              id=\"predicted-by-list\"\n              className=\"jumbotron prediction\"\n              style={{ margin: '12px', padding: \"20px 32px\" }}\n            >\n              <h3 className=\"center\" style={{ color: \"#424242\" }}>Predicted By</h3>\n\n              {predictedByList}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nfunction LeftTabs(props) {\n  var heading = 'Auction Status';\n\n  if (props.value) {\n    heading = props.teamName;\n  }\n\n  let background = 'white';\n  if (props.current === props.value) {\n    background = 'rgba(255,255,255,0.6)'\n  }\n\n  return (\n    <ListItem\n      button\n      key={props.value}\n      onClick={props.handler}\n      style={{ margin: '14px auto', background: background, borderRadius: \"5px\" }}\n    >\n      <ListItemText primary={heading} />\n    </ListItem>\n  );\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teams: {\n        1: [12, 14],\n        2: [15, 16, 19],\n        3: [30, 10],\n        4: [1],\n        5: [2],\n        6: [4],\n        7: [5],\n        8: [6, 7, 9],\n      },\n      currentMain: 0,\n      teamCodes: {\n        1: 'asdfgh',\n        2: 'hgfdsa',\n      },\n      teamNames: {\n        1: 'Team 1',\n        2: 'Team 2',\n        3: 'Team 3',\n        4: 'Team 4',\n        5: 'Team 5',\n        6: 'Team 6',\n        7: 'Team 7',\n        8: 'Team 8',\n      },\n      moneyLeft: {\n        1: 100,\n        2: 200,\n        3: 300,\n        4: 400,\n        5: 500,\n        6: 600,\n        7: 700,\n        8: 800,\n      },\n      predictionDict: {\n        1: [],\n        2: [],\n        3: [],\n      },\n      isPredictionLoading: false,\n      prioritiesDict: {},\n      isPrioritiesLoading: false\n    };\n  }\n\n  updateCurrrentMain(i) {\n    console.log('update current main', i);\n    this.setState({\n      currentMain: i,\n    });\n  }\n\n  componentDidMount() {\n    const db = firebase.firestore();\n\n    // Snapshot for players sold\n    db.collection('team_players').onSnapshot((snap) => {\n      var empty_dict = {};\n      snap.forEach((doc) => {\n        empty_dict[doc.id] = doc.data();\n      });\n\n      // Empty dict created with all the values\n      this.setState({\n        teams: empty_dict,\n      });\n    });\n\n    // A simple fetch for team names\n    db.collection('selectedTeams')\n      .get()\n      .then((snap) => {\n        let teamNamesDict = {};\n        let teamCodesDict = {};\n        snap.forEach((doc) => {\n          teamNamesDict[doc.id] = doc.data()['teamName'];\n          teamCodesDict[doc.data()['teamCode']] = doc.id;\n        });\n\n        this.setState({\n          teamNames: teamNamesDict,\n          teamCodes: teamCodesDict,\n          isPredictionLoading: true\n        });\n\n        // predictions list to be extracted from firebase\n        db.collection('predictions')\n          .get()\n          .then((snap) => {\n            let predictedTeams = {};\n\n            snap.forEach((doc) => {\n              const predictionArray = doc.data()['predictionArray'];\n              for (let i = 0; i < predictionArray.length; i++) {\n                if (predictedTeams[predictionArray[i]]) {\n                  predictedTeams[predictionArray[i]].push(\n                    teamNamesDict[teamCodesDict[doc.id]],\n                  );\n                } else {\n                  predictedTeams[predictionArray[i]] = [\n                    teamNamesDict[teamCodesDict[doc.id]],\n                  ];\n                }\n              }\n            });\n\n            this.setState({\n              predictionDict: predictedTeams,\n              isPredictionLoading: false\n            });\n          })\n          .catch((error) => {\n            console.log('Team Name Fetch failed');\n\n            this.setState({\n              isPredictionLoading: false\n            });\n          });\n      })\n      .catch((error) => {\n        console.log('Team Name Fetch failed');\n      });\n\n    // A snapshot for money left\n    db.collection('selectedTeams').onSnapshot(\n      (snap) => {\n        let moneyLeftDict = {};\n        snap.forEach((doc) => {\n          moneyLeftDict[doc.id] = doc.data()['money'];\n        });\n\n        this.setState({\n          moneyLeft: moneyLeftDict,\n        });\n\n        // console.log(this.state.moneyLeft);\n      },\n      (error) => {\n        console.log('Money left snapshot failed', error);\n      },\n    );\n\n    // For the priorites\n    this.setState({\n      isPrioritiesLoading: true\n    });\n\n    db.collection('priorityPlayers').get()\n      .then((snap) => {\n        let tempDict = {};\n\n        snap.forEach(doc => {\n          tempDict[doc.id] = doc.data()['teams'];\n        });\n\n        this.setState({\n          prioritiesDict: tempDict,\n          isPrioritiesLoading: false\n        });\n\n      })\n      .catch((error) => {\n        console.log(\"Fetch of priorities failed\");\n        this.setState({\n          isPrioritiesLoading: false\n        });\n      });\n\n  }\n\n  render() {\n    const round = this.props.round;\n\n    if (round === 'prediction') {\n      return <Predict />;\n    } else {\n      // First creation of Left menu\n      const leftBar = [];\n      for (let i = 0; i <= 8; i++) {\n        // For first one is the auction one\n\n        leftBar.push(\n          <LeftTabs\n            key={i}\n            value={i}\n            handler={() => this.updateCurrrentMain(i)}\n            teamName={this.state.teamNames[i]}\n            current={this.state.currentMain}\n          />,\n        );\n      }\n\n      const currentMain = this.state.currentMain;\n\n      return (\n        <div id=\"auction-container\">\n          <div className=\"row\">\n            <div className=\"col-sm-3\">\n              <List\n                style={{\n                  position: \"sticky\",\n                  top: 0\n                }}\n                id=\"left-bar\"\n              >\n                {leftBar}\n              </List>\n            </div>\n            <div className=\"col-sm-9\">\n              <MiddleBlock\n                moneyLeft={this.state.moneyLeft[currentMain]}\n                currentMain={currentMain}\n                teams={this.state.teams}\n                round={this.props.round}\n                predictedByList={this.state.predictionDict[this.props.round]}\n                isPredictionLoading={this.state.isPredictionLoading}\n                prioritiesDict={this.state.prioritiesDict[this.props.round]}\n                isPrioritiesLoading={this.state.isPrioritiesLoading}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport SimplePlayerCard from '../SimplePlayerCard';\nimport Button from '@material-ui/core/Button';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Stats from '../Stats';\nimport playerNames from '../../data/players.json';\n\nclass Player extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      soldDict: {},\n      toOpen: false,\n      currentClick: 1,\n    };\n    //this.handleDialogOpen = this.handleDialogOpen.bind(this)\n\n    // Unsubscribe from firebase use\n    this.unsubscribe = firebase.firestore().collection('team_players').onSnapshot(\n      (snap) => {\n        var soldDict = {};\n        snap.forEach((doc) => {\n          const data = doc.data();\n          for (var key in data) {\n            soldDict[key] = data[key];\n          }\n        });\n\n        // Finally update the ones who are sold\n        this.setState({\n          soldDict: soldDict,\n        });\n      },\n      (err) => {\n        console.log('Fetch Failed');\n      },\n    );\n  }\n\n  handleFailDialogClose = () => {\n    this.setState({\n      toOpen: false,\n    });\n  };\n\n  handleDialogOpen(i) {\n    this.setState({\n      toOpen: true,\n      currentClick: i,\n    });\n    console.log('handle dialog open', i);\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const soldDict = this.state.soldDict;\n\n    const array = [];\n    for (let i = 1; i <= 60; i++) {\n      array.push(i);\n    }\n\n    const elementArr = array.map((i) => (\n      <SimplePlayerCard\n        key={i}\n        value={i}\n        sold={true}\n        handler={() => this.handleDialogOpen(i)}\n        price={soldDict[i]}\n        colSize=\"3\"\n      />\n    ));\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">{elementArr}</div>\n\n        <Dialog\n          open={this.state.toOpen}\n          onClose={this.handleFailDialogClose}\n          aria-labelledby=\"Login Failed\"\n          aria-describedby=\"Fail dialog\"\n        >\n          <DialogTitle id=\"alert-dialog-title\" style={{ textAlign: 'center' }}>\n            {playerNames[this.state.currentClick]}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              <Stats playerNo={this.state.currentClick} />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={this.handleFailDialogClose}\n              color=\"primary\"\n              autoFocus\n            >\n              close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Fragment } from 'react';\nimport playerName from '../data/players.json';\n\nfunction TeamCard(props) {\n  const teamMember = props.teamMember;\n  const teamMemberComponent = [];\n  const predictionComponent = [];\n  const shares = props.shares;\n  const boughtSharesComponent = [];\n\n  for(var player in shares){\n    boughtSharesComponent.push(<li>{playerName[player]} - {shares[player]}%</li>) \n  }\n\n  try {\n    for (let i = 0; i < teamMember.length; i++) {\n      teamMemberComponent.push(\n        <li key={i} className=\"teamMemberList\">\n          {teamMember[i]}\n        </li>,\n      );\n    }\n  } catch (error) {\n    console.log('sed life');\n  }\n\n  let title = 'Predicted Players';\n  if (props.priority) {\n    title = 'Chosen Players';\n\n    try {\n      for (let i = 0; i < props.prediction_arr.priorityArray.length; i++) {\n        const imgSrc = 'cpng/' + props.prediction_arr.priorityArray[i] + '.jpg';\n\n        predictionComponent.push(\n          <div key={i} className=\"predictionList col-sm-1\">\n            <div class=\"card\" style={{ width: '8rem', height: '95%' }}>\n              <img\n                src={imgSrc}\n                class=\"card-img-top\"\n                alt={playerName[props.prediction_arr.priorityArray[i]]}\n              />\n              <div class=\"card-body\">\n                <p class=\"card-text\">\n                  {playerName[props.prediction_arr.priorityArray[i]]}\n                </p>\n              </div>\n            </div>\n          </div>,\n        );\n      }\n\n      predictionComponent.push(\n        <div className=\"shares col-sm-2 center\" style={{\"background\": \"white\" , \"borderRadius\" : \"10px\" , \"maxWidth\": \"200px\" , \"marginLeft\" : \"35px\" , \"height\":\"auto\" , \"overflow\":\"auto\" , }}>\n          <h5 style={{\"paddingTop\":\"10px\"}}>Purchased Shares</h5>\n          <ul style={{\"padding\": \"0px\" , \"listStyle\": \"none\" , \"alignContent\" : \"left\" , \"textAlign\" : \"left\" , \"fontSize\":\"13px\"}}>\n            {boughtSharesComponent}\n          </ul>\n        </div>\n      )\n    } catch (error) {\n      console.log('sed life 2');\n    }\n\n  } else {\n    try {\n      for (let i = 0; i < props.prediction_arr.predictionArray.length; i++) {\n        const imgSrc =\n          'cpng/' + props.prediction_arr.predictionArray[i] + '.jpg';\n\n        predictionComponent.push(\n          <div key={i} className=\"predictionList col-sm-1\">\n            <div class=\"card\" style={{ width: '8rem', height: '95%' }}>\n              <img\n                src={imgSrc}\n                class=\"card-img-top\"\n                alt={playerName[props.prediction_arr.predictionArray[i]]}\n              />\n              <div class=\"card-body\">\n                <p class=\"card-text\">\n                  {playerName[props.prediction_arr.predictionArray[i]]}\n                </p>\n              </div>\n            </div>\n          </div>,\n        );\n      }\n    } catch (error) {\n      console.log('sed life 2');\n    }\n  }\n  return (\n    <Fragment>\n      <h4 className=\"titleOfpredict\">{title}</h4>\n      <div className=\"row\">\n        <div className=\"col-sm-3\">\n          <div className=\"card\" style={{ width: '90%' }}>\n            <div className=\"card-body\">\n              <h5 className=\"teamNames\">Team Name - {props.teamName}</h5>\n              <h6 className=\"teamLeaders mb-2 text-muted\">\n                {' '}\n                Team Leader - {props.teamLeader}\n              </h6>\n              <p className=\"teamMembers\"> Members - {teamMemberComponent}</p>\n            </div>\n          </div>\n        </div>\n\n        {predictionComponent}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default TeamCard;\n","import React, {Fragment} from 'react';\n\nimport '../css/teams.css';\nimport TeamCard from './teamCard.js';\n\nexport default class UnselectedTeams extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamDetails: this.props.unSelectedTeams,\n      priorityDict: this.props.priorityDict,\n      sharesDict : this.props.sharesDict,\n    };\n  }\n\n  render() {\n    const teamDetails = this.state.teamDetails;\n\n    const teamCodes = [];\n    const teamNames = [];\n    const teamMembers = [];\n    const teamLeaders = [];\n    const allTeamsComponent = [];\n    const priorityDict = this.state.priorityDict;\n\n    for (let key in teamDetails) {\n      teamNames.push(teamDetails[key]['teamName']);\n      teamMembers.push(teamDetails[key]['teamMembers']);\n      teamLeaders.push(teamDetails[key]['teamLeader']);\n      teamCodes.push(teamDetails[key]['teamCode']);\n    }\n\n    //sharedDict = teamCode : player : share\n\n    for (let key = 1; key < teamCodes.length + 1; key++) {\n      // console.log(\"Sending data of team\" , teamCodes[key-1])\n      allTeamsComponent.push(\n        <TeamCard\n          key={key}\n          teamName={teamNames[key - 1]}\n          teamMember={teamMembers[key - 1]}\n          teamLeader={teamLeaders[key - 1]}\n          teamCode={teamCodes[key - 1]}\n          prediction_arr={priorityDict[teamCodes[key - 1]]}\n          priority={true}\n          shares = {this.state.sharesDict[teamCodes[key-1]]}\n        />,\n      );\n    }\n\n    return <Fragment>{allTeamsComponent}</Fragment>;\n  }\n}\n","import React, { Fragment } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport '../../css/teams.css';\nimport UnseletedTeams from '../unselectedTeams';\nimport TeamCard from '../teamCard.js';\n\nclass Teams extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teamDetails: {},\n      predictionDict: {},\n      toShowSelected: true,\n      unTeamDetails: {},\n      priorityDict: {},\n      sharesDict: {}\n    };\n\n    // Adding firebase listeners in constructor so that they can be unsubscribed later\n    this.unsubscribe = firebase.firestore().collection('selectedTeams') //change this back to selected teams :p\n      .onSnapshot(\n        (snap) => {\n          var Dict = {};\n          snap.forEach((doc) => {\n            const data = doc.data();\n            Dict[doc.id] = data;\n          });\n\n          this.setState({\n            teamDetails: Dict,\n          });\n        },\n        (err) => {\n          console.log('Fetch Failed');\n        },\n      );\n\n    this.unsubscribeForUnselected = firebase.firestore()\n      .collection('unselectedTeams') //change this back to selected teams :p\n      .onSnapshot(\n        (snap) => {\n          var Dict = {};\n          snap.forEach((doc) => {\n            const data = doc.data();\n            Dict[doc.id] = data;\n          });\n\n          this.setState({\n            unTeamDetails: Dict,\n          });\n        },\n        (err) => {\n          console.log('Fetch Failed');\n        },\n      );\n  } // End of constructor\n\n  showSelected = () => {\n    this.setState({\n      toShowSelected: true,\n    });\n  };\n\n  showUnselected = () => {\n    this.setState({\n      toShowSelected: false,\n    });\n  };\n\n  componentDidMount() {\n\n    // console.log(this.props.round);\n\n    if (this.props.round !== 'prediction') {\n      console.log('if is working');\n\n      var predictionArray = {};\n\n      firebase.firestore().collection('predictions')\n        .get()\n        .then((snap) => {\n          snap.forEach((doc) => {\n            predictionArray[doc.id] = doc.data();\n          });\n\n          this.setState({\n            predictionDict: predictionArray,\n          });\n        });\n\n      var priorityArray = {};\n\n      firebase.firestore().collection('priority')\n        .get()\n        .then((snap) => {\n          snap.forEach((doc) => {\n            priorityArray[doc.id] = doc.data();\n          });\n\n          this.setState({\n            priorityDict: priorityArray,\n          });\n\n        });\n\n      let sharesDict = {};\n\n      firebase.firestore().collection(\"priorityPlayers\").get().then((snap) => {\n        snap.forEach((doc) => {\n          var playerNo = doc.id;\n          var teamOwners = doc.data()[\"teams\"];\n          var percentShare = Math.floor(100 / teamOwners.length);\n          for (var i = 0; i < teamOwners.length; i++) {\n            if (!sharesDict[teamOwners[i]]) {\n              sharesDict[teamOwners[i]] = {};\n            }\n            sharesDict[teamOwners[i]][playerNo] = percentShare;\n          }\n        })\n\n        console.log(\"Shares Dict\", sharesDict)\n        this.setState({\n          sharesDict: sharesDict,\n        })\n      });\n\n    } else {\n      console.log('prediction is going on');\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n    this.unsubscribeForUnselected();\n  }\n\n  render() {\n\n    if (this.state.toShowSelected) {\n      const teamDetails = this.state.teamDetails;\n\n      const teamCodes = [];\n      const teamNames = [];\n      const teamMembers = [];\n      const teamLeaders = [];\n      const allTeamsComponent = [];\n      const predictionDict = this.state.predictionDict;\n\n      for (let key in teamDetails) {\n        teamNames.push(teamDetails[key]['teamName']);\n        teamMembers.push(teamDetails[key]['teamMembers']);\n        teamLeaders.push(teamDetails[key]['teamLeader']);\n        teamCodes.push(teamDetails[key]['teamCode']);\n      }\n\n      for (let key in teamDetails) {\n        allTeamsComponent.push(\n          <TeamCard\n            key={key}\n            teamName={teamNames[key - 1]}\n            teamMember={teamMembers[key - 1]}\n            teamLeader={teamLeaders[key - 1]}\n            teamCode={teamCodes[key - 1]}\n            prediction_arr={predictionDict[teamCodes[key - 1]]}\n          />,\n        );\n      }\n\n      return (\n        <Fragment>\n          <div id=\"navbar\" className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col center\" onClick={this.showSelected}>\n                {' '}\n                Teams for Auction\n              </div>\n              <div className=\"col center text-info\" onClick={this.showUnselected}>\n                {' '}\n                Teams for IPO{' '}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"container-fluid\">{allTeamsComponent}</div>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <div id=\"navbar\" className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col center text-info\" onClick={this.showSelected}>\n                {' '}\n                Teams for Auction\n              </div>\n              <div className=\"col center\" onClick={this.showUnselected}>\n                {' '}\n                Teams for IPO{' '}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"container-fluid\">\n            <UnseletedTeams unSelectedTeams={this.state.unTeamDetails} priorityDict={this.state.priorityDict} sharesDict={this.state.sharesDict} />\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default Teams;\n","import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport LoginHandler from './LoginHandler';\nimport ReactLoading from 'react-loading';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // sTVm5NerQMaqUnWWxQoN\n\n    this.state = {\n      userID: '',\n      currentQuestionNumber: 1,\n      currentQuestion: '',\n      answer: '',\n      questions: {},\n      maxMarksPerQuestion: {},\n      answerDict: {\n        1: '',\n        2: '',\n        3: '',\n        4: '',\n        5: '',\n        6: '',\n        7: '',\n        8: '',\n        9: '',\n        10: '',\n        11: '',\n        12: '',\n      },\n      loginFail: false,\n      isLoading: false\n    };\n    this.updateQuestion = this.updateQuestion.bind(this);\n    this.handleAnswerInput = this.handleAnswerInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.loginSubmitHandler = this.loginSubmitHandler.bind(this);\n    this.handleDialogClose = this.handleDialogClose.bind(this);\n  }\n\n  handleDialogClose() {\n    this.setState({\n      loginFail: false,\n    });\n  }\n\n  updateQuestion(value) {\n    this.setState({\n      currentQuestion: value,\n    });\n  }\n\n  handleAnswerInput(event) {\n    this.setState({ answer: event.target.value });\n  }\n\n  handleSubmit(event) {\n    var answer = this.state.answer;\n    var Qno = this.state.currentQuestionNumber;\n    event.preventDefault();\n\n    var tempDict = {};\n    tempDict[Qno] = answer;\n\n    const db = firebase.firestore();\n    db.collection('answers')\n      .doc(this.state.userID)\n      .set(tempDict, { merge: true });\n\n    var newQno = this.state.currentQuestionNumber + 1;\n\n    if (newQno > 12) {\n      newQno = 1;\n    }\n\n    this.setState({\n      answer: '',\n      currentQuestionNumber: newQno,\n      currentQuestion: this.state.questions[newQno],\n    });\n  }\n\n  //for toggling between questions using tabs\n\n  questionTab(i) {\n    this.setState({\n      currentQuestion: this.state.questions[i],\n      currentQuestionNumber: i,\n    });\n  }\n\n  loginSubmitHandler(val) {\n    console.log('Submit Hanlder called', val);\n\n    const db = firebase.firestore();\n    const answersRef = db.collection('answers').doc(val);\n\n    this.setState({\n      isLoading: true\n    });\n\n    answersRef\n      .get()\n      .then((docSnapshot) => {\n        if (docSnapshot.exists) {\n          // Doc exists so login successful\n\n          // Now update the state\n          this.setState({\n            userID: val,\n            isLoading: false\n          });\n\n          answersRef.onSnapshot(\n            (snap) => {\n              this.setState({\n                answerDict: snap.data(),\n              });\n            },\n            (err) => {\n              console.log(`Encountered error: ${err}`);\n            },\n          );\n        } else {\n          this.setState({\n            loginFail: true,\n            isLoading: false\n          });\n        }\n      })\n      .catch(function (err) {\n        alert('Network connection Error');\n        this.setState({\n          isLoading: false\n        });\n      }); // End of answersRef get\n  }\n\n  componentDidMount() {\n    const db = firebase.firestore();\n    const doc = db.collection('questions').doc('questionSet');\n\n    doc\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log(doc.data());\n          console.log(this.state.currentQuestion);\n\n          this.setState({\n            currentQuestion: doc.data()[this.state.currentQuestionNumber],\n            questions: doc.data(),\n          });\n        } else {\n          // doc.data() will be undefined in this case\n          console.log('No such document!');\n        }\n      })\n      .catch((error) => {\n        console.log('Error getting document:', error);\n      });\n\n    // Here we will also fetch the marks\n    db.collection('questions')\n      .doc('marks')\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          console.log('Marks', doc.data());\n          this.setState({\n            maxMarksPerQuestion: doc.data(),\n          });\n        } else {\n          console.log('No such doc exists');\n        }\n      })\n      .catch((error) => {\n        console.log('Question marks fetch error', error);\n      });\n  } // End of componentDidMount\n\n  render() {\n    // First chck if the ID is entered on not\n\n    if (this.state.userID) {\n      //  for the questions tabs\n      const tabs = () => {\n        var total = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        return total.map((i) => {\n          var colorType = 'btn-success';\n          if (!this.state.answerDict[i]) {\n            colorType = 'btn-warning';\n          }\n          return (\n            <button\n              key={i}\n              onClick={() => this.questionTab(i)}\n              className={`btn tabs ${colorType}`}\n            >\n              {i}\n            </button>\n          );\n        });\n      };\n\n      const marksOfThisQuestion = this.state.maxMarksPerQuestion[\n        this.state.currentQuestionNumber\n      ];\n\n      return (\n        <div>\n          <h1 className=\"center\" style={{ margin: \"12px 0 16px 0\" }}>Quiz Round</h1>\n          <div id=\"quiz-box\" className=\"container\">\n            <div className=\"jumbotron\">\n              <h3 className=\"display-4\">\n                Question {this.state.currentQuestionNumber}\n              </h3>\n              <p className=\"lead\" style={{ whiteSpace: 'pre-line' }}>\n                {this.state.currentQuestion} <strong> [{marksOfThisQuestion}] </strong>\n              </p>\n              <hr className=\"my-4\" />\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"input-gap\">\n                  <Input\n                    onChange={this.handleAnswerInput}\n                    value={this.state.answer}\n                    placeholder={\n                      this.state.answerDict[this.state.currentQuestionNumber]\n                    }\n                  ></Input>\n                </div>\n                <div className=\"lead\">\n                  <button type=\"Submit\" className=\"btn btn-primary\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n\n          <div className=\"container\">\n            <div id=\"questions-tab\" className=\"row\">\n              {tabs()}\n            </div>\n          </div>\n\n        </div>\n      );\n    } // End of userId If\n    else {\n\n      let toShowLoginHandler = '';\n\n      const isLoading = this.state.isLoading;\n      if (!isLoading) {\n        toShowLoginHandler = <LoginHandler submitHandler={this.loginSubmitHandler} />;\n      } else {\n        // The request has been made\n        toShowLoginHandler =  <ReactLoading key={0} type={\"cylon\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />;\n      }\n\n      return (\n        <div id=\"quiz-login\">\n          <h1 className=\"center\" style={{ margin: \"12px 0 16px 0\" }}>Quiz Round</h1>\n          {toShowLoginHandler}\n\n          <Dialog\n            open={this.state.loginFail}\n            onClose={this.handleDialogClose}\n            aria-labelledby=\"Login Failed\"\n            aria-describedby=\"Fail dialog\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              Login Unsuccessful\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                Please check you secret Id and try again!\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleDialogClose} color=\"primary\">\n                close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Quiz;\n","import React from 'react';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport ReactLoading from 'react-loading';\n\nconst themesArray = ['default', 'tblue', 'tred', 'tgreen', 'tyellow']\n\nclass Messages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messagesArray: [],\n      cTheme: 0\n    };\n\n\n    this.unsubscribe = firebase\n      .firestore()\n      .collection('admin')\n      .doc('updates')\n      .onSnapshot(\n        (snap) => {\n          try {\n            // console.log('messages', snap.data());\n            this.updateMessages(snap.data()['announcements'], true);\n          } catch (error) {\n            this.updateMessages(['Fetch Failed'], false);\n          }\n        },\n        (error) => {\n          console.log('Messages Error came', error);\n        },\n      );\n  }\n\n  getCookie = (cname) => {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  setCookie = (cname, cvalue) => {\n    document.cookie = cname + \"=\" + cvalue + \";path=/\";\n  }\n\n  updateMessages = (messagesArray, success) => {\n\n    const currentMessageArray = this.state.messagesArray;\n\n    if ((messagesArray.length - currentMessageArray.length) < 3) {\n\n      console.log(\"Show innovative update\");\n\n      let variant = 'success'\n      if (!success) {\n        variant = 'error';\n      }\n\n      this.props.enqueueSnackbar(messagesArray[messagesArray.length - 1], { variant: variant });\n    } else {\n      this.props.enqueueSnackbar('Welcome Guys ', { variant: \"info\" })\n    }\n\n    this.setState({\n      messagesArray: messagesArray,\n    });\n  }\n\n  themeToggler = () => {\n    let cTheme = this.state.cTheme;\n\n    document.getElementById('main-content').classList.remove(themesArray[cTheme]);\n    cTheme += 1\n\n    if (cTheme >= themesArray.length) {\n      cTheme = 0;\n    }\n\n    document.getElementById('main-content').classList.add(themesArray[cTheme]);\n\n    this.setState({\n      cTheme: cTheme\n    });\n\n    this.setCookie('themeData', cTheme);\n\n  }\n\n  componentDidMount() {\n\n    // For getting themes Cookies\n    const cookie = this.getCookie('themeData');\n    console.log(\"Cookie found\", cookie);\n    if (cookie) {\n\n      document.getElementById('main-content').classList.add(themesArray[cookie]);\n\n      this.setState({\n        cTheme: parseInt(cookie)\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const messageEl = [];\n    const messagesArray = this.state.messagesArray;\n    for (let i = messagesArray.length - 1; i >= 0; i--) {\n      if (i === messagesArray.length - 1) {\n        messageEl.push(<li key={i} className=\"text-primary\">{messagesArray[i]}</li>);\n      } else {\n        messageEl.push(<li key={i}>{messagesArray[i]}</li>);\n      }\n    }\n\n    const elements = []\n\n    if (!messageEl.length) {\n      elements.push(\n        <div key={0} style={{ overflow: 'auto', padding: 0, height: '60vh', color: \"#7d7d7d\" }}>\n          <ReactLoading key={0} type={\"bubbles\"} style={{ margin: \"auto\", height: \"80px\", width: \"80px\" }} color=\"#000000\" />\n        </div>\n      )\n    } else {\n      elements.push(\n        <ul key={0} style={{ overflow: 'auto', height: '60vh', color: \"#7d7d7d\" }}>\n          {messageEl}\n        </ul>\n      )\n    }\n\n    return (\n      <div style={{ position: \"sticky\", top: 0 }}>\n        <div className=\"jumbotron updates-table\" id=\"updates-container\" style={{ marginRight: \"-15px\" }}>\n          <h1 className=\"center\">Updates</h1>\n          {elements}\n        </div>\n\n        <div>\n          <Button onClick={this.themeToggler}>Toggle Theme</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withSnackbar(Messages);\n","import React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nexport default class QuizWaiting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: {},\n      questions: {},\n    };\n  }\n\n  componentDidMount() {\n    const db = firebase.firestore();\n\n    db.collection('questions')\n      .doc('answers')\n      .get()\n      .then((doc) => {\n        // console.log(doc.data());\n        this.setState({\n          answers: doc.data(),\n        });\n      })\n      .catch((error) => {\n        console.log('Fetch correct answers failed!');\n      });\n\n    db.collection('questions')\n      .doc('questionSet')\n      .get()\n      .then((doc) => {\n        // console.log(doc.data());\n        this.setState({\n          questions: doc.data(),\n        });\n      })\n      .catch((error) => {\n        console.log('Fetch correct questions failed!');\n      });\n  }\n\n  render() {\n    const correctAnswers = this.state.answers;\n    const questions = this.state.questions;\n\n    const answersComponent = [];\n    for (var key in questions) {\n      answersComponent.push(\n        <div key={key} className=\"answers-block jumbotron\">\n          <p style={{ whiteSpace: 'pre-line' }}>\n            {' '}\n            {key} : {questions[key]}{' '}\n          </p>\n          <h4 style={{ whiteSpace: 'pre-line' }}>\n            {' '}\n            Answer {key} : {correctAnswers[key]}\n          </h4>\n        </div>,\n      );\n    }\n\n    return <div className=\"container\" style={{ marginTop: \"16px\" }}> {answersComponent}</div>;\n  }\n}\n","import React, { Fragment } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport ReactLoading from 'react-loading';\n\nexport default class PriorityResults extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scorecard: [],\n    };\n\n    this.unsubscribe = firebase.firestore()\n      .collection('unselectedTeams').onSnapshot((snap) => {\n\n        let tempDict = {};\n\n        snap.forEach((doc) => {\n          tempDict[doc.data()['teamName']] = doc.data()['money'];\n        });\n\n        // Sorting by key and creating an array\n        var items = Object.keys(tempDict).map(function (key) {\n          return [key, tempDict[key]];\n        });\n\n        // Sort the array based on the second element\n        items.sort(function (first, second) {\n          return second[1] - first[1];\n        });\n\n        this.setState({\n          scorecard: items,\n        });\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  render() {\n    const scorecard = this.state.scorecard;\n    let tableToCreate = [];\n    var i = 0\n    for (let key in scorecard) {\n      i = i + 1\n      tableToCreate.push(\n        <Fragment key={key}>\n          <tr className=\"table-info\" style={{ textAlign: 'center' }}>\n            <td>{i}</td>\n            <td>{scorecard[key][0]}</td>\n            <td>{parseFloat(scorecard[key][1]).toFixed(2)}</td>\n          </tr>\n        </Fragment>,\n      );\n    }\n\n    let elements = [];\n\n    if (!tableToCreate.length) {\n      elements = (\n        <div style={{ marginTop: \"32px\" }}>\n          <ReactLoading type={\"bars\"} style={{ margin: \"auto\", width: \"100px\" }} />\n        </div>\n      )\n    } else {\n      elements = (\n        <table\n          style={{\n            margin: 'auto',\n            width: '70%',\n            border: '1px solid black',\n            borderRadius: '5px!important',\n          }}\n        >\n          <thead className=\"thead-dark\">\n            <tr style={{ textAlign: 'center' }}>\n              <th>Rank</th>\n              <th>Team Name</th>\n              <th>Money</th>\n            </tr>\n          </thead>\n          <tbody>{tableToCreate}</tbody>\n        </table>\n      )\n    }\n\n    return (\n      <div className=\"table\" style={{ padding: '60px' }}>\n        <h1 style={{ textAlign: 'center' }}>IPO Leaderboard</h1>\n\n        {elements}\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport PriorityResults from '../priorityResults';\n\nexport default class QuizResult extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scorecard: {},\n      teamNames: {\n        1: 'Team 1',\n        2: 'Team 2',\n        3: 'Team 3',\n        4: 'Team 4',\n        5: 'Team 5',\n        6: 'Team 6',\n        7: 'Team 7',\n        8: 'Team 8',\n      },\n      teamDetails: {},\n      predictionDict: {},\n      toShowSelected: false,\n    };\n\n    this.unsubscribe = '';\n  }\n\n  showQuiz = () => {\n    this.setState({\n      toShowSelected: true,\n    });\n  };\n\n  showIPO = () => {\n    this.setState({\n      toShowSelected: false,\n    });\n  };\n\n  componentDidMount() {\n    const db = firebase.firestore();\n\n    this.unsubscribe = firebase.firestore().collection('scorecard').onSnapshot((snap) => {\n      let tempDict = {};\n      snap.forEach((doc) => {\n        tempDict[doc.id] = doc.data().total;\n      });\n      var items = Object.keys(tempDict).map(function (key) {\n        return [key, tempDict[key]];\n      });\n\n      // Sort the array based on the second element\n      items.sort(function (first, second) {\n        return second[1] - first[1];\n      });\n      this.setState({\n        scorecard: items,\n      });\n    });\n\n    db.collection('registeredTeams')\n      .get()\n      .then((doc) => {\n        let teamNames = {};\n        doc.forEach((row) => {\n          teamNames[row.id] = row.data()['teamName'];\n        });\n\n        this.setState({\n          teamNames: teamNames,\n        });\n      })\n      .catch((error) => {\n        console.log('Error in quiz Result', error);\n      });\n  }\n\n  componentWillUnmount() {\n    try {\n      this.unsubscribe();\n    } catch (err) {\n      console.log(\"Just to prevent the problem\");\n    }\n  }\n\n  render() {\n    if (this.state.toShowSelected) {\n      const scorecard = this.state.scorecard;\n      const tableToCreate = [];\n      for (let i = 0; i < scorecard.length; i++) {\n        tableToCreate.push(\n          <Fragment key={i}>\n            <tr className=\"table-info\" style={{ textAlign: 'center' }}>\n              <td>{i + 1}</td>\n              <td>{this.state.teamNames[scorecard[i][0]]}</td>\n              <td>{scorecard[i][1]}</td>\n            </tr>\n          </Fragment>,\n        );\n      }\n\n      return (\n        <Fragment>\n          <div id=\"navbar\" className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col center\" onClick={this.showQuiz}>\n                {' '}\n                Quiz Results{' '}\n              </div>\n              <div className=\"col center text-info\" onClick={this.showIPO}>\n                {' '}\n                IPO Leaderboard{' '}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"table\" style={{ padding: '60px' }}>\n            <h1 style={{ textAlign: 'center' }}>Quiz Results!</h1>\n            <table\n              style={{\n                margin: 'auto',\n                width: '70%',\n                border: '1px solid black',\n                borderRadius: '5px!important',\n              }}\n            >\n              <thead className=\"thead-dark\">\n                <tr style={{ textAlign: 'center' }}>\n                  <th>Rank</th>\n                  <th>Team Name</th>\n                  <th>Team Score</th>\n                </tr>\n              </thead>\n              <tbody>{tableToCreate}</tbody>\n            </table>\n          </div>\n        </Fragment>\n      );\n    } else {\n      return (\n        <Fragment>\n          <div id=\"navbar\" className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col center text-info\" onClick={this.showQuiz}>\n                {' '}\n                Quiz Results{' '}\n              </div>\n              <div className=\"col center\" onClick={this.showIPO}>\n                {' '}\n                IPO Leaderboard{' '}\n              </div>\n            </div>\n          </div>\n\n          <PriorityResults />\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Fragment } from 'react';\n\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nimport LoginHandler from '../LoginHandler';\nimport { Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button\n} from '@material-ui/core';\n\nclass Prestart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      message: \"\",\n      enter: false\n    }\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      message: \"\",\n      open: false\n    });\n  }\n\n  checkCode = (tCode) => {\n    // console.log('Team code got', tCode);\n\n    const db = firebase.firestore();\n    db.collection('answers').doc(tCode).get().then(\n      doc => {\n        if (doc.exists) {\n          // console.log(\"Success the code exists\");\n          this.setState({\n            message: \"The code is Valid!\",\n            enter: true\n          });\n\n        } else {\n          this.setState({\n            open: true,\n            message: \"The code does not Exist!\"\n          });\n        }\n      }\n    ).catch(error => {\n      console.log(\"error came\", error);\n      this.setState({\n        open: true\n      });\n    });\n  }\n\n  render() {\n\n\n    if (this.state.enter) {\n\n      return (\n        <Fragment>\n\n          <div className=\"jumbotron container\" style={{ marginTop: \"10vh\" }}>\n\n            <h2 className=\"center\">Great ! Your secret Code is working well.</h2>\n            <h4 className=\"center\">Please wait till the quiz round starts. In the meantime, read the rules for the quiz round.</h4>\n            <div style={{\n              margin: \"auto\",\n              padding: \"10px\"\n            }}\n            >\n              <ul>\n                <li><code>Total Questions :</code> 12</li>\n                <li><code>Total time :</code> 30 minutes</li>\n                <li><code>Total marks :</code> 50</li>\n                <li>Different questions may have different marks associated with them.</li>\n                <li>Some questions may have <code>partial marking</code></li>\n                <li>Marking scheme of questions is NOT shared</li>\n                <li>For questions with multiple answers, please write the answers in proper sequence</li>\n                <li>Reminders will be sent after <code>15, 25 and 29 minutes</code>. Make sure that you have submitted all your answers by clicking the submit button. No requests to extra time after the 30 minutes will be entertained.</li>\n                <li>Rules for Tiebreaker</li>\n                <blockquote style={{ marginLeft: \"22px\" }}>\n\n                  <li><strong>Backward marking</strong> - In case of equal scores, questions will be checked from the last. In first case of difference, the answer with lesser marks loses.</li>\n                  <li><strong>Special Tiebreaker round</strong> - If a tie still persists, the teams will be invited to a separate google meet for a special tie breaker question.</li>\n\n                </blockquote>\n              </ul>\n\n            </div>\n          </div>\n        </Fragment >\n      )\n    } else {\n\n      return (\n        <Fragment>\n          <h1 className=\"center\" style={{ margin: \"32px\" }}>Game going to be started soon!</h1>\n          <LoginHandler submitHandler={this.checkCode} />\n\n\n          {/* dialog for telling about */}\n          <Dialog\n            open={this.state.open}\n            onClose={this.handleDialogClose}\n            aria-labelledby=\"Login Failed\"\n            aria-describedby=\"Fail dialog\"\n          >\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                {this.state.message}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleDialogClose} color=\"primary\">\n                close\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Fragment>\n      )\n    }\n  }\n}\n\nexport default Prestart;\n","import React, { Fragment } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport ReactLoading from 'react-loading';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Home from './components/pages/home';\nimport Player from './components/pages/players';\nimport Teams from './components/pages/teams';\nimport Quiz from './components/quiz';\nimport Messages from './components/messages';\nimport QuizWaiting from './components/QuizWaiting';\nimport QuizResult from './components/pages/QuizResult';\nimport Prestart from './components/pages/prestart';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    // setting the inital state of the App\n    this.state = {\n      tabValue: 0,\n      round: 'prestart321',\n      messages: ['Hello message 1', 'hello message 2', 'Hello message 3'],\n    };\n\n    // Don't forget to bind the functions to classes\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /* ----- Add functions here ----- */\n  updateRound(round, lastSold) {\n\n    // round is integer or string or say between 1 to 60\n    try {\n      if (round <= 60 && round >= 1) {\n        console.log(\"Round\", round);\n        console.log(lastSold);\n      }\n    } catch (error) {\n      console.log(\"Not a number\");\n    }\n\n    this.setState({\n      round: round,\n    });\n  }\n\n  handleChange(event, newValue) {\n    this.setState({\n      tabValue: newValue,\n    });\n    console.log('Handle Change', newValue);\n  }\n\n  /* ----- Add Firebase details here ------ */\n  // Add firebase updates and listener here\n  componentDidMount() {\n    const db = firebase.firestore();\n    const doc = db.collection('admin').doc('current');\n\n    doc.onSnapshot(\n      (snap) => {\n        try {\n          // console.log('Recieved Round Info', snap.data().pid);\n          // this.updateRound(snap.data().pid, snap.data().lastSold);\n        } catch (error) {\n          console.log('Main fetch failed', error);\n        }\n      },\n      (err) => {\n        console.log(`Encountered error: ${err}`);\n      },\n    );\n  }\n\n  render() {\n    // First check for the Quiz Round from the firebase\n    const r = this.state.round;\n\n    let round = '...';\n    if (r === 'quiz123') {\n      round = 'quiz'\n    } else if (r === 'wait546') {\n      round = 'waiting'\n    } else if (r === 'disp457') {\n      round = 'display'\n    } else if (r === 'prestart321') {\n      round = 'prestart'\n    } else if (r === 'prediction') {\n      round = 'prediction'\n    }\n    else {\n      // if ( (r !== 'quiz') && (r !== 'waiting') && (r !== 'prestart')) {\n      //   round = r;\n      // } else if {\n        \n      // }\n\n      if (parseInt(r) >=1 && parseInt(r) <=60) {\n        round = r;\n      }\n    }\n\n    console.log(\"Round\", round);\n    console.log(\"R\", r);\n\n    // Check for the quiz round!\n    if (round === '...') {\n      return (\n        <Fragment>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ margin: \"40vh auto\", width: \"100px\" }}>\n              <ReactLoading style={{ margin: \"auto\" }} type=\"spinningBubbles\" color=\"#000000\" height={'20%'} width={'20%'} />\n            </div>\n          </div>\n        </Fragment>\n      )\n    } else if (round === 'prestart') {\n      return (\n        <div id=\"main-content\" className=\"container-fluid\">\n          <Prestart />\n        </div>\n      )\n    }\n    else if (round === 'quiz') {\n      return (\n        <div id=\"main-content\" className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-sm-9\">\n              <Quiz />\n            </div>\n            <div className=\"col-sm-3\">\n              <Messages />\n            </div>\n          </div>\n        </div>\n      );\n    } else if (round === 'waiting') {\n      return (\n        <Router>\n          <AppBar position=\"static\" color=\"transparent\" id=\"nav-bar\">\n            <Tabs\n              variant=\"fullWidth\"\n              aria-label=\"Navigation\"\n              value={this.state.tabValue}\n              onChange={this.handleChange}\n            >\n              <Tab label=\"Answers\" to=\"/\" component={Link} />\n              <Tab label=\"Players\" to=\"/players\" component={Link} />\n            </Tabs>\n          </AppBar>\n\n          <div id=\"main-content\">\n            <Switch>\n              <Route path=\"/players\">\n                <Player />\n              </Route>\n\n              <Route path=\"/\">\n                <div className=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-9\">\n                      <QuizWaiting />\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <Messages />\n                    </div>\n                  </div>\n                </div>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      );\n    } else if (round === 'display') {\n      return (\n        <Router>\n          <AppBar position=\"static\" color=\"transparent\" id=\"nav-bar\">\n            <Tabs\n              variant=\"fullWidth\"\n              aria-label=\"Navigation\"\n              value={this.state.tabValue}\n              onChange={this.handleChange}\n            >\n              <Tab label=\"Players\" to=\"/players\" component={Link} />\n              <Tab label=\"Teams\" to=\"/teams\" component={Link} />\n              <Tab label=\"LeaderBoard\" to=\"/leaderboard\" component={Link}></Tab>\n            </Tabs>\n          </AppBar>\n\n          <div id=\"main-content\">\n            <Switch>\n              <Route path=\"/teams\">\n                <Teams />\n              </Route>\n              <Route path=\"/leaderboard\">\n                <QuizResult />\n              </Route>\n\n              <Route path=\"/players\">\n                <div className=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-9\">\n                      <Player />\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <Messages />\n                    </div>\n                  </div>\n                </div>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      );\n    } else {\n      // The main content and routes everything\n      return (\n        <Router>\n          <AppBar position=\"static\" color=\"transparent\" id=\"nav-bar\">\n            <Tabs\n              variant=\"fullWidth\"\n              aria-label=\"Navigation\"\n              value={this.state.tabValue}\n              onChange={this.handleChange}\n            >\n              <Tab label=\"Home\" to=\"/\" component={Link} />\n              <Tab label=\"Players\" to=\"/players\" component={Link} />\n              <Tab label=\"Teams\" to=\"/teams\" component={Link} />\n              <Tab label=\"LeaderBoard\" to=\"/leaderboard\" component={Link}></Tab>\n            </Tabs>\n          </AppBar>\n\n          <div id=\"main-content\">\n            <Switch>\n              <Route path=\"/players\">\n                <Player />\n              </Route>\n              <Route path=\"/teams\">\n                <Teams round={this.state.round} />\n              </Route>\n              <Route path=\"/leaderboard\">\n                <QuizResult />\n              </Route>\n              <Route path=\"/\">\n                <div className=\"container-fluid\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-9\">\n                      <Home round={round} />\n                    </div>\n                    <div className=\"col-sm-3\">\n                      <Messages />\n                    </div>\n                  </div>\n                </div>\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      );\n    }\n  } // End of render\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { SnackbarProvider } from 'notistack';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyAy8oi_BHmxutKBvJ2oQLaU41RB1m0qElc',\n  authDomain: 'iit-auction.firebaseapp.com',\n  databaseURL: 'https://iit-auction.firebaseio.com',\n  projectId: 'iit-auction',\n  storageBucket: 'iit-auction.appspot.com',\n  messagingSenderId: '1009078682293',\n  appId: '1:1009078682293:web:caafd6e69e15e62d29f4fc',\n  measurementId: 'G-H7K3QDLHPQ',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <SnackbarProvider maxSnack={3}>\n    <App />\n  </SnackbarProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}